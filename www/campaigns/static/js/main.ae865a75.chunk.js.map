{"version":3,"sources":["ViewContext.jsx","views/simulator/Endpoint.jsx","views/simulator/Bideditor.jsx","assets/img/react-logo.png","views/simulator/DemoTag.jsx","views/simulator/Windisplay.jsx","assets/img/anime3.png","assets/img/emilyz.jpg","views/Simulator.jsx","components/Sidebar/Sidebar.jsx","components/Navbars/AdminNavbar.jsx","components/Footer/Footer.jsx","components/FixedPlugin/FixedPlugin.jsx","LoginModal.jsx","views/Dashboard.jsx","views/TableList.jsx","views/editors/CampaignEditor.jsx","views/editors/TargetEditor.jsx","views/editors/CreativeEditor.jsx","views/editors/RuleEditor.jsx","routes.js","views/Campaigns.jsx","views/Targets.jsx","views/Creatives.jsx","views/Rules.jsx","layouts/Admin/Admin.jsx","index.js","views/simulator/Utils.jsx"],"names":["httpAgent","http","Agent","keepAlive","axiosInstance","axios","create","useViewContext","createUseContext","useState","loggedIn","setLoggedIn","name","setPassword","server","setServer","jwt","members","accounting","setAccounting","runningCampaigns","setRunningCampaigns","campaigns","setCampaigns","bidders","setBidders","changeLoginState","value","a","listCampaigns","password","undef","cmd","token","type","execute","data","getBidders","entries","getAccounting","console","log","JSON","stringify","getNewCreative","campaign","result","deleteCampaign","id","getDbCampaigns","addNewCampaign","e","getNewCampaign","getNewTarget","getNewRule","post","responseType","response","error","alert","getCount","acc","Endpoint","props","vx","optionItems","vars","exchanges","map","exchange","index","selected","ssp","key","url","uri","text","style","width","className","xs","addonType","onChange","rootHandler","backgroundColor","font","border","padding","cursor","exchangeHandler","Bideditor","bidTypes","bid","bidtype","bidTypeChangedHandler","color","onClick","sendBid","size","clearHandler","placeholder","json","theme","locale","height","jsonChangedHandler","module","exports","DemoTag","output","adm","isVideo","onPause","playing","ReactHtmlParser","windisplay","textAreaStyle","fontSize","nurl","show","sendWinNotice","xtime","rows","cols","disabled","winSent","cannedResponse","Simulator","count","setCount","file","SampleBanner","SampleVideo","SampleAudio","SampleNative","bidobject","bidvalue","bidresponse","winsent","selectedBidType","indexOf","jsonError","setVars","exchangeChangedHandler","event","target","i","changeSsp","changeUri","redraw","bt","changeBidtype","changeBidresponse","copy","obj","s","parse","x","eval","plainText","changeBidvalue","newval","changeUrl","composite","state","line","reason","endpoint","document","getElementById","creative","setWinSent","rtt","performance","now","headers","changeXtime","status","seatbid","changeNurl","changeAdm","changeWinsent","setAdm","replace","get","restore","brClearHandler","wClearHandler","ps","AdminNavbar","collapseOpen","modalSearch","modalState","setModalState","useEffect","window","addEventListener","updateColor","removeEventListener","innerWidth","toggleModalSearch","classNames","expand","fluid","toggled","sidebarOpened","bgColor","toggleSidebar","href","preventDefault","brandText","aria-expanded","aria-label","data-target","data-toggle","setState","navbar","isOpen","nav","caret","right","tag","length","row","time","instance","message","setEventsView","alt","src","require","divider","modalClassName","toggle","data-dismiss","Footer","Date","getFullYear","rel","React","Component","Sidebar","linkOnClick","documentElement","classList","remove","activeRoute","bind","routeName","this","location","pathname","navigator","platform","PerfectScrollbar","refs","sidebar","suppressScrollX","suppressScrollY","destroy","routes","rtlActive","logo","logoImg","logoText","undefined","outterLink","imgSrc","Link","to","innerLink","ref","prop","redirect","path","pro","NavLink","layout","activeClassName","icon","rtlName","defaultProps","FixedPlugin","handleClick","classes","activateMode","mode","body","add","data-color","handleBgClick","block","outline","LoginModal","setName","login","mx","callback","estyle","for","sm","Dashboard","refresh","isLoggedIn","from","leader","toString","stopped","nobid","qps","avgx","setCampaignsView","CampaignEditor","startDate","setStartDate","endDate","setEndDate","adomain","date","push","getTime","md","defaultValue","htmlFor","forensiq","multiple","showTimeSelect","timeFormat","timeIntervals","timeCaption","dateFormat","assignedSpendRate","c","TargetEditor","lat","lon","range","region","os","price","cur","weight","RuleEditor","rule","notPresentOk","specification","operand","component","setCampaign","makeNew","camp","editCampaign","running","setTarget","targ","setCreative","makeNewBanner","banner","isBanner","makeNewVideo","getNewVideo","video","CreativeEditor","setRule","r","Admin","setBackgroundColor","setSidebarOpened","getBrandText","Switch","Route","hist","createBrowserHistory","ReactDOM","render","Router","history","Provider","Redirect"],"mappings":"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","file":"static/js/main.ae865a75.chunk.js","sourcesContent":["import {useState} from 'react';\nimport createUseContext from \"constate\"; // State Context Object Creator\nimport http from 'http';\nimport axios from 'axios';\nimport { SampleBanner} from './views/simulator/Utils';\nimport { resetWarningCache } from 'prop-types';\n\nvar undef;\nvar mapXhr;\nvar xhrLog;\nvar interval = 0;\n\nconst httpAgent = new http.Agent({ keepAlive: true });\nconst axiosInstance = axios.create({\n  httpAgent,  // httpAgent: httpAgent -> for non es6 syntax\n});\n\nconst  ViewContext = () => {\n\n    const [loggedIn, setLoggedIn] = useState(false);\n    const [name,setName] = useState('');\n    const [password,setPassword] = useState('');\n    const [server, setServer] = useState('localhost:7379');\n    const [jwt, setJwt] = useState('23skiddoo');\n    const [members, setMembers] = useState([]);\n    const [accounting, setAccounting] = useState({});\n    const [runningCampaigns, setRunningCampaigns] = useState([])\n    const [campaigns, setCampaigns] = useState([]);               // db campaigns\n    const [bidders, setBidders] = useState([]);\n\n    const reset = () => {\n      setLoggedIn(false);\n    }\n\n    const changeLoginState = async (value) => {\n      if (value && loggedIn)\n        return;\n\n      if (!value && !loggedIn)\n        return; \n        \n      await setLoggedIn(value);\n      return loggedIn;\n    }\n\n    const listCampaigns = async(name,password,server) => {\n      if (server != undef)\n        setServer(name);\n      if (password != undef)\n        setPassword(password);\n      if (server != undef) \n        setServer(server);\n\n      // get a token, if the tokken is valid, proceed\n\n      var cmd = {\n        token: jwt,\n        type: \"ListCampaigns#\"\n      };\n      var data = await execute(cmd);\n\n      if (data === undef)\n        return;\n      setRunningCampaigns(data.campaigns);\n      return data.campaigns;\n    }\n\n    const getBidders = async() => {\n\n      var cmd = {\n        token: jwt,\n        type:\"GetBiddersStatus#\"\n      };\n      var data = await execute(cmd);\n      if (data == undef)\n        return;\n      setBidders(data.entries);\n      return data.entries;\n    }\n\n    const getAccounting = async() => {\n      var cmd = {\n        token: jwt,\n        type: \"GetAccounting#\"\n      };\n      var data = await execute(cmd);\n\n      console.log(\"GetAccounting returns: \" + JSON.stringify(data,null,2));\n      if (data === undef)\n        return;\n      setAccounting(data.accounting);\n      return data.accounting;\n    }\n\n    const getNewCreative = async () => {\n      var cmd = {\n        token: jwt,\n        type: \"SQLGetNewCreative#\",\n        campaign: name\n      };\n      var result = await execute(cmd);\n\n      console.log(\"SQLGetNewCreative returns: \" + JSON.stringify(result,null,2));\n      if (result === undef)\n        return;\n      return result.data;\n    }\n\n    const deleteCampaign = async (id) => {\n      var cmd = {\n        token: jwt,\n        type: \"SQLDeleteCampaign#\",\n        id: id\n      };\n      var result = await execute(cmd);\n\n      console.log(\"SQLDeleteCampaign returns: \" + JSON.stringify(result,null,2));\n      if (result === undef)\n        return;\n      return result.data;\n    }\n\n    const getDbCampaigns = async () => {\n      var cmd = {\n        token: jwt,\n        type: \"SQLListCampaigns#\"\n      };\n      var data = await execute(cmd);\n     console.log(\"=====> GetDbCampaigns returns: \" + JSON.stringify(data,null,2));\n     setCampaigns(data.campaigns);\n     return data.campaigns;\n    }\n\n    const addNewCampaign = async(e) => {\n      var cmd = {\n        token: jwt,\n        type: \"SQLAddNewCampaign#\",\n        campaign: e\n      };\n\n      console.log(\"==========>\" + JSON.stringify(cmd,null,2));\n      var result = await execute(cmd);\n\n      console.log(\"SQLAddNewCampaign returns: \" + JSON.stringify(result,null,2));\n      if (result === undef)\n        return;\n      return result.data;\n    }\n\n    const getNewCampaign = async(name) => {\n      var cmd = {\n        token: jwt,\n        type: \"SQLGetNewCampaign#\",\n        campaign: name\n      };\n      var result = await execute(cmd);\n\n      console.log(\"SQLGetNewCampaign returns: \" + JSON.stringify(result,null,2));\n      if (result === undef)\n        return;\n      return result.data;\n    }\n\n    const getNewTarget = async(name) => {\n      var cmd = {\n        token: jwt,\n        type: \"SQLGetNewTarget#\",\n        name: name\n      };\n      var result = await execute(cmd);\n\n      console.log(\"SQLGetNewTarget returns: \" + JSON.stringify(result,null,2));\n      if (result === undef)\n        return;\n      return result.data;\n    }\n\n    const getNewRule = async(name) => {\n      var cmd = {\n        token: jwt,\n        type: \"SQLGetNewRule#\",\n        name: name\n      };\n      var result = await execute(cmd);\n\n      console.log(\"SQLGetNewRule returns: \" + JSON.stringify(result,null,2));\n      if (result === undef)\n        return;\n      return result.data;\n    }\n\n\n\n    const  execute = async (cmd) =>  {\n      try {\n        var response = await axiosInstance.post(\"http://\" + server + \"/api\",JSON.stringify(cmd), { responseType: 'text' }); \n        if (response.data && response.data.error) {\n          alert(response.data.error);\n          return;\n        }\n        //console.log(\"------>\" + JSON.stringify(response,null,2));\n        return response.data;\n      } catch (error) {\n        alert(error);\n      }\n    }\n\n    const getCount = (acc,id) => {\n      if (acc[id] === undef)\n        return 0;\n      return acc[id];\n    }\n\n      ///////////////////////////\n\n    return { \n      members, loggedIn, changeLoginState, listCampaigns, runningCampaigns, getBidders, bidders,\n      getAccounting, accounting, getCount, getNewCampaign, getNewTarget, getNewRule, \n      getDbCampaigns, campaigns, getNewCreative, addNewCampaign, deleteCampaign\n    };\n};\n\nexport const useViewContext = createUseContext(ViewContext);","import React from 'react';\n\nimport {\n    Card,\n    Col,\n    Row,\n    CardHeader,\n    Input,\n    InputGroup,\n    InputGroupAddon,\n    InputGroupText\n } from 'reactstrap';\n import { useViewContext } from \"../../ViewContext\";\n\nconst Endpoint = (props) => {\n\n    const vx = useViewContext();\n\n    const style = {\n        backgroundColor: 'yellow',\n        font: 'inherit',\n        border: '4x solid blue',\n        padding: '1px',\n        cursor: 'pointer'\n\n    }\n\n    const optionItems = props.vars.exchanges.map((exchange,index) =>\n        <option selected={exchange.name===vx.ssp} key={\"exchange-select\" + index}>{exchange.name}</option>\n    );\n\n    let estyle = {\n        overflow: 'scroll'\n    }\n\n    let composite = props.url + props.uri\n\n    console.log(\"ENDPOINT: \" + props.vars.uri);\n\n    return (\n        <Card  text=\"white\" style={{ width: '100%' }}>\n        <CardHeader>\n          <h5 className=\"title\">Send Bids/Wins to RTB Server</h5>\n        </CardHeader>\n        <Row>\n            <Col xs=\"3\">\n                <InputGroup>\n                    <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText>Root</InputGroupText>\n                    </InputGroupAddon>\n                    <Input value={props.vars.url} onChange={props.rootHandler} />\n                </InputGroup>\n            </Col>\n            <Col xs=\"2\">\n                <select style={style} onChange={props.exchangeHandler} width='100%'>\n                    {optionItems}\n                </select>\n            </Col>\n            <Col xs=\"auto\">\n                <InputGroup>\n                    <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText>Endpoint</InputGroupText>\n                    </InputGroupAddon>\n                    <Input\n                        value={props.vars.url + props.vars.uri}\n                        onChange={props.rootHandler}\n                        id='endpoint' />\n                </InputGroup>\n            </Col>\n        </Row>\n    </Card>\n    );\n};\n\nexport default Endpoint;","import React from 'react';\nimport JSONInput from 'react-json-editor-ajrm';\nimport locale from 'react-json-editor-ajrm/locale/en';\nimport {\n    Button,\n    Card,\n    CardHeader,\n    Row,\n    Col\n } from 'reactstrap';\n import { useViewContext } from \"../../ViewContext\";\n\n\nconst Bideditor = (props) => {\n\n    const vx = useViewContext();\n\n    const style = {\n        backgroundColor: 'yellow',\n        font: 'inherit',\n        border: '4x solid blue',\n        padding: '1px',\n        cursor: 'pointer'\n\n    }\n\n    const textAreaStyle = {\n        fontSize: 12\n    };\n\n\n    let estyle = {\n        overflow: 'scroll'\n    }\n\n    let bidTypes = props.vars.bidTypes.map((bid) =>\n        <option  selected={bid.name===vx.bidtype} key={bid.name}>{bid.name}</option>\n    );\n\n    return (\n        <Card  text=\"white\" style={{ width: '100%' }}>\n        <CardHeader>\n          <h5 className=\"title\">Select Request Type</h5>\n        </CardHeader>\n                <Row>\n                    <Col xs=\"auto\">\n                        <select style={style} onChange={props.bidTypeChangedHandler}>\n                            {bidTypes}\n                        </select>\n                    </Col>\n                    <Col xs=\"1\">\n                <Button color=\"danger\" onClick={props.sendBid} size=\"sm\">Send Bid</Button>\n                </Col>\n                <Col xs=\"1\">\n                <Button color=\"success\" onClick={props.clearHandler} size=\"sm\">Clear</Button>\n                </Col>\n                </Row>\n\n                <Row >\n                    <Col xs=\"6\">\n                        <JSONInput\n                            id='json_bid'\n                            placeholder={props.vars.json}\n                            theme='dark'\n                            locale={locale}\n                            height='266px'\n                            width='95%'\n                            onChange={props.jsonChangedHandler}\n                        />\n                    </Col>\n                    <Col xs=\"6\">\n                        <JSONInput\n                            id='json_response'\n                            placeholder={props.vars.response}\n                            theme='dark'\n                            locale={locale}\n                            height='266px'\n                            width='95%'\n                        />\n                </Col>\n                </Row>\n        </Card>\n    )\n}\n\nexport default Bideditor;","module.exports = __webpack_public_path__ + \"static/media/react-logo.eb6be414.png\";","import React, { useState} from 'react';\nimport ReactPlayer from 'react-player'\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\n\nimport useScript from '../../useScript';\n\nconst DemoTag = (props) => {\n    const myStyle = {\n        fontSize: 12\n    };\n\n    const pausedNotice = (e) =>{\n        console.log(\"PAUSED: \" + e);\n    }\n\n    const sendEvent = () => {\n        console.log(\"===============================\");\n    }\n\n    let output = props.adm;\n\n    if (props.isVideo)\n        return (<ReactPlayer \n            width='100%'\n            height='265px'\n            onPause={pausedNotice}\n        url={props.adm} playing />);\n    else \n        return( <div>{ ReactHtmlParser( output) }</div> );\n}\n\nexport default DemoTag;","import React from 'react';\nimport {\n    Input,\n    Card,\n    CardHeader,\n    Row,\n    Col,\n    Button\n} from \"reactstrap\";\n\nimport DemoTag from './DemoTag';\n\nconst windisplay = (props) => {\n    \n    const textAreaStyle = {\n        fontSize: 12\n    };\n\n    console.log(\"WIN NURL: \" + props.vars.nurl);\n    console.log(\"ADM: \" + props.vars.adm);\n    console.log(\"VIDEO: \" + props.vars.isVideo);\n    const show = !(props.vars.nurl === '');\n    console.log(\"SHOW: \" + show);\n\n    return (\n        <div>\n            {show ? (\n                <Card  text=\"white\" style={{ width: '100%' }}>\n                    <CardHeader>\n                        <h5 className=\"title\">Process Win</h5>\n                   </CardHeader>\n                   <Row>\n                       <Col>\n                            <Button color=\"success\" onClick={props.sendWinNotice} size=\"sm\">Send Win</Button>\n                        </Col>\n                        <Col>\n                            {props.vars.xtime}\n                       </Col>\n                   </Row>\n                    <Row>\n                        <Input\n                                value={props.vars.nurl}\n                                style={textAreaStyle}\n                                id='winurl' />\n                    </Row>\n                        <Row>\n                            <Col xs=\"6\">\n                                <textarea \n                                    style={textAreaStyle}\n                                    value={props.vars.adm} \n                                    rows=\"14\" cols=\"65\" disabled />\n                            </Col>\n                            <Col xs=\"6\">\n                                { props.vars.winSent &&\n                                  <DemoTag isVideo={props.vars.isVideo} adm={props.vars.adm} />\n                                }\n                            </Col>\n                        </Row>\n                </Card>\n            ) : (\n                <Card  text=\"white\" style={{ width: '100%' }}>\n                    <CardHeader>\n                        <h5 className=\"title\">On Win, markup will appear here...</h5>\n                   </CardHeader>\n                </Card>\n            )}\n        </div>\n            \n    );\n}\n\nexport default windisplay;","module.exports = __webpack_public_path__ + \"static/media/anime3.bd6820f1.png\";","module.exports = __webpack_public_path__ + \"static/media/emilyz.9fcf69e5.jpg\";","import React, { useState } from 'react';\nimport axios from 'axios';\nimport http from 'http';\nimport Endpoint from './simulator/Endpoint';\nimport Bideditor from './simulator/Bideditor';\nimport Windisplay from './simulator/Windisplay';\nimport { Logo, Tips, SampleBanner, SampleVideo, SampleAudio, SampleNative } from './simulator/Utils';\nimport { SSL_OP_LEGACY_SERVER_CONNECT } from 'constants';\nimport { useViewContext } from \"../ViewContext\";\n\nconst httpAgent = new http.Agent({ keepAlive: true });\nconst axiosInstance = axios.create({\n  httpAgent,  // httpAgent: httpAgent -> for non es6 syntax\n});\nconst cannedResponse = {\"response\": \"will go here\"};\n\nconst Simulator = (props) =>  {\n\n  const vx = useViewContext();\n\n  const [count, setCount] = useState(0);\n\n  const [vars, setVars] = useState({\n    exchanges: [\n      { name: 'Nexage', uri: '/rtb/bids/nexage' },\n      { name: 'Bidswitch', uri: '/rtb/bids/bidswitch' },\n      { name: 'Admedia', uri: '/rtb/bids/admedia'},\n      { name: 'Adprudence', uri: '/rtb/bids/adprudence' },\n      { name: 'Appnexus', uri: '/rtb/bids/appnexus' },\n      { name: 'Adventurefeeds', uri: '/rtb/bids/adventurefeeds' },\n      { name: 'Atomx', uri: '/rtb/bids/atomx' },\n      { name: 'Axonix', uri: '/rtb/bids/axionix' },\n      { name: 'Bidswitch', uri: '/rtb/bids/bidswitch' },\n      { name: 'c1x', uri: '/rtb/bids/c1x' },\n      { name: 'Cappture', uri: '/rtb/bids/cappture' },\n      { name: 'Citenko', uri: '/rtb/bids/citenko' },\n      { name: 'Epomx', uri: '/rtb/bids/epomx' },\n      { name: 'Fyber', uri: '/rtb/bids/fyber' },\n      { name: 'Gotham', uri: '/rtb/bids/gotham' },\n      { name: 'Google', uri: '/rtb/bids/google' },\n      { name: 'Index', uri: '/rtb/bids/index' },\n      { name: 'Intango', uri: '/rtb/bids/intango' },\n      { name: 'Kadam', uri: '/rtb/bids/kaddam' },\n      { name: 'Medianexusnetwork', uri: '/rtb/bids/medianexusnetwork' },\n      { name: 'Mobfox', uri: '/rtb/bids/mobfox' },\n      { name: 'Openssp', uri: '/rtb/bids/openssp' },\n      { name: 'Openx', uri: '/rtb/bids/openx' },\n      { name: 'Pokkt', uri: '/rtb/bids/pookt' },\n      { name: 'Pubmatic', uri: '/rtb/bids/pubmatic' },\n      { name: 'Republer', uri: '/rtb/bids/republer' },\n      { name: 'Smaato', uri: '/rtb/bids/smaato' },\n      { name: 'Smartyads', uri: '/rtb/bids/smartyads' },\n      { name: 'Smartadserver', uri: '/rtb/bids/smartadserver' },\n      { name: 'Spotx', uri: '/rtb/bids/spotx' },\n      { name: 'Ssphwy', uri: '/rtb/bids/ssphwy' },\n      { name: 'Stroer', uri: '/rtb/bids/stroer' },\n      { name: 'Taggify', uri: '/rtb/bids/taggify' },\n      { name: 'Tappx', uri: '/rtb/bids/tappx' },\n      { name: 'Vdopia', uri: '/rtb/bids/vdopia' },\n      { name: 'Ventuno', uri: '/rtb/bids/ventuno' },\n      { name: 'Vertamedia', uri: '/rtb/bids/vertamedia' },\n      { name: 'Waardx', uri: '/rtb/bids/waardx' },\n      { name: 'Wideorbit', uri: '/rtb/bids/wideorbit' }\n    ],\n    bidTypes: [\n      { name: \"Banner\", file: SampleBanner },\n      { name: \"Video\", file: SampleVideo },\n      { name: \"Audio\", file: SampleAudio },\n      { name: \"Native\", file: SampleNative }\n    ],\n    json: vx.bidobject, //SampleBanner,\n    uri: vx.uri,\n    url: vx.url,\n    bid: vx.bidvalue, // JSON.stringify(SampleBanner, null, 2),\n    response: vx.bidresponse,\n    adm: vx.adm,\n    nurl: vx.nurl,\n    winSent: vx.winsent,\n    selectedBidType: vx.bidtype,\n    xtime: vx.xtime,\n    isVideo: vx.nurl.indexOf(\"Video\") > -1,\n    jsonError: false\n  });\n\n  const exchangeChangedHandler = (event, id) => {\n    const name = event.target.value;\n    for (var i in vars.exchanges) {\n      var exchange = vars.exchanges[i]\n      if (exchange.name === name) {\n        vx.changeSsp(name);\n        vx.changeUri(exchange.uri);\n\n        console.log(\"EXCHANGE IS NOW: \" + name);\n      }\n    }\n\n    vars.uri = vx.uri;\n    vars.url = vx.url;\n    setVars(vars);\n\n    console.log(\"NEW URI: \" + vars.uri)\n    redraw();\n  }\n\n  const redraw = () => {\n    setCount(count + 1);\n  }\n\n  const bidTypeChangedHandler = (event, id) => {\n    const name = event.target.value;\n    var file = '?';\n    for (var i in vars.bidTypes) {\n      var bt = vars.bidTypes[i]\n      if (bt.name === name) {\n        file = bt.file;\n        vx.changeBidtype(bt.name);\n        vx.changeBidresponse(cannedResponse);\n      }\n    }\n    vars.response = cannedResponse;\n    vars.selectedBidType = name;\n    vars.json = copy(file);\n    vars.bid = JSON.stringify(file, null, 2);\n    setVars(vars);\n\n    redraw();\n  }\n\n  const copy = (obj) => {\n    const s = JSON.stringify(obj);\n    return JSON.parse(s);\n  }\n\n  const jsonChangedHandler = (obj) => {\n    try {\n      var x = eval('(' + obj.plainText+ ')');\n      x = JSON.stringify(x,null,2);\n      console.log(\"CHANGED: \" + x);    \n      vx.changeBidvalue(x);\n      vars.bid = x;\n    } catch (e) {\n      // is an error but the editor will handle it.\n    }\n    vars.jsonError = obj.error;\n    setVars(vars);\n  }\n\n  const rootHandler = (event, id) => {\n    const newval = event.target.value;\n    vars.url = newval;\n    vx.changeUrl(newval);\n    console.log(\"ROOTHANDLER: \" + event.target.value)\n    setVars(vars);\n    redraw();\n  }\n\n  const composite = () => {\n    return vars.state.url + vars.state.uri;\n  }\n\n  const show = () => {\n    alert(JSON.stringify(this.state))\n  };\n\n\n  const sendBid = async  (event, id) => {\n    console.log(\"SENDING A BID\");\n    if (vars.jsonError !== false) {\n      alert(\"Can't send, error at line \" + vars.jsonError.line + \"\\n\" +\n        vars.jsonError.reason);\n      return;\n    }\n    const endpoint = document.getElementById('endpoint').value;\n\n    var bid = vars.bid\n    bid = JSON.stringify(JSON.parse(bid))\n    console.log(\"THE BID IS: \" + bid);\n\n    vars.nurl = '';\n    vars.adm = '';\n    vars.creative = '';\n    vars.isVideo=false;\n    vars.winSent = false;\n    vx.setWinSent = false;\n    setVars(vars);\n \n    var rtt =  performance.now();\n    var xtime;\n    \n    try {\n      const response = await axiosInstance.post(endpoint,bid);\n      rtt = \"rtt: \" + (performance.now() - rtt);\n      xtime = \"xtime: \" + response.headers['x-time'];\n      vars.xtime = rtt + \", \" + xtime;\n      vx.changeXtime(rtt + \", \" + xtime)\n      if (response.status !== 200) {\n        alert(\"NOBID: Response was: \" + response.status + \", rtt: \" + (performance.now()-rtt) + \", xtime: \" + xtime);\n        return;\n      }\n      //console.log(\"RESPONSE: \" + JSON.stringify(response.data));\n      vx.changeBidresponse(response.data);\n      vars.nurl =  response.data.seatbid[0].bid[0].nurl;\n      vx.changeNurl(vars.nurl);\n      vars.response = response.data;\n      vars.adm = response.data.seatbid[0].bid[0].adm;\n      vars.creative = response.data.seatbid[0].bid[0].adm;\n      vx.changeAdm(response.data.seatbid[0].bid[0].adm);\n      setVars(vars);\n      redraw();\n    } catch (error) {\n      vx.changeBidresponse({\"oops\": error});\n      vars.nurl =  '';\n      vars.response = {\"oops\": error};\n      vars.adm = '';\n      vars.creative = '';\n      vars.winSent = false;\n      vx.changeWinsent(false)\n      setVars(vars);\n      vx.changeXtime(\"rtt: 0, xtime: 0\");\n      vx.setAdm('');\n      redraw();\n      alert(\"ERROR: \" + error + \" \" + endpoint);\n    console.error(error);\n  }\n}\n\n  const sendWinNotice = async (event, id) => {\n    var nurl = vars.nurl\n    nurl = nurl.replace(\"${AUCTION_PRICE}\", \"1.23\")\n    vx.changeNurl(nurl);\n    console.log(\"NURL: \" + nurl)\n\n    try {\n      const response = await axiosInstance.get(nurl);\n      console.log(\"RESPONSE: \" + response.data);\n      vars.isVideo = nurl.indexOf(\"Video\") > -1;\n      vars.winSent = true;\n      vx.changeWinsent(true);\n      setVars(vars);\n      redraw();\n    } catch (error) {\n      alert(\"ERROR: \" + error);\n    }\n  }\n\n  const restore = () => {\n\n  }\n\n  const brClearHandler = (event, id) => {\n    vars.bid = '';\n    vars.response = {};\n    setVars(vars);\n\n    redraw();\n  }\n\n  const wClearHandler = (event, id) => {\n    vars.adm = '';\n    vars.nurl = '';\n    vars.response = cannedResponse;\n    vx.changeAdm('');\n    vx.changeNurl('');\n    vx.changeBidresponse(cannedResponse);\n    setVars(vars);\n\n    redraw();\n  }\n\n    return (\n        <>\n            <div className=\"content\">\n              <Endpoint vars={vars} rootHandler={rootHandler} exchangeHandler={exchangeChangedHandler} />\n              <Bideditor vars={vars} bidTypeChangedHandler={bidTypeChangedHandler}   clearHandler={wClearHandler} \n                jsonChangedHandler={jsonChangedHandler} sendBid={sendBid} restore={restore} />\n              <Windisplay vars={vars} sendWinNotice={sendWinNotice} />\n            </div>\n        </>\n    );\n}\n\n\nexport default Simulator;","/*!\n\n=========================================================\n* Black Dashboard React v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n/*eslint-disable*/\nimport React from \"react\";\nimport { NavLink, Link } from \"react-router-dom\";\n// nodejs library to set properties for components\nimport { PropTypes } from \"prop-types\";\n\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\n// reactstrap components\nimport { Nav } from \"reactstrap\";\n\nvar ps;\n\nclass Sidebar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.activeRoute.bind(this);\n  }\n\n\n  // verifies if routeName is the one active (in browser input)\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(this.refs.sidebar, {\n        suppressScrollX: true,\n        suppressScrollY: false\n      });\n    }\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n    }\n  }\n  linkOnClick = () => {\n    document.documentElement.classList.remove(\"nav-open\");\n  };\n  render() {\n\n\n    const { bgColor, routes, rtlActive, logo } = this.props;\n    let logoImg = null;\n    let logoText = null;\n    if (logo !== undefined) {\n      if (logo.outterLink !== undefined) {\n        logoImg = (\n          <a\n            href={logo.outterLink}\n            className=\"simple-text logo-mini\"\n            target=\"_blank\"\n            onClick={this.props.toggleSidebar}\n          >\n            <div className=\"logo-img\">\n              <img src={logo.imgSrc} alt=\"react-logo\" />\n            </div>\n          </a>\n        );\n        logoText = (\n          <a\n            href={logo.outterLink}\n            className=\"simple-text logo-normal\"\n            target=\"_blank\"\n            onClick={this.props.toggleSidebar}\n          >\n            {logo.text}\n          </a>\n        );\n      } else {\n        logoImg = (\n          <Link\n            to={logo.innerLink}\n            className=\"simple-text logo-mini\"\n            onClick={this.props.toggleSidebar}\n          >\n            <div className=\"logo-img\">\n              <img src={logo.imgSrc} alt=\"react-logo\" />\n            </div>\n          </Link>\n        );\n        logoText = (\n          <Link\n            to={logo.innerLink}\n            className=\"simple-text logo-normal\"\n            onClick={this.props.toggleSidebar}\n          >\n            {logo.text}\n          </Link>\n        );\n      }\n    }\n    return (\n      <div className=\"sidebar\" data={bgColor}>\n        <div className=\"sidebar-wrapper\" ref=\"sidebar\">\n          {logoImg !== null || logoText !== null ? (\n            <div className=\"logo\">\n              {logoImg}\n              {logoText}\n            </div>\n          ) : null}\n          <Nav >\n            {routes.map((prop, key) => {\n              if (prop.redirect) return null;\n              return (\n                <li\n                  className={\n                    this.activeRoute(prop.path) +\n                    (prop.pro ? \" active-pro\" : \"\")\n                  }\n                  key={key}\n                >\n                  <NavLink\n                    to={prop.layout + prop.path}\n                    className=\"nav-link\"\n                    activeClassName=\"active\"\n                    onClick={this.props.toggleSidebar}\n                  >\n                    <i className={prop.icon} />\n                    <p>{rtlActive ? prop.rtlName : prop.name}</p>\n                  </NavLink>\n                </li>\n              );\n            })}\n          </Nav>\n        </div>\n      </div>\n    );\n  }\n}\n\nSidebar.defaultProps = {\n  rtlActive: false,\n  bgColor: \"primary\",\n  routes: [{}]\n};\n\nSidebar.propTypes = {\n  // if true, then instead of the routes[i].name, routes[i].rtlName will be rendered\n  // insde the links of this component\n  rtlActive: PropTypes.bool,\n  bgColor: PropTypes.oneOf([\"primary\", \"blue\", \"green\", \"red\"]),\n  routes: PropTypes.arrayOf(PropTypes.object),\n  logo: PropTypes.shape({\n    // innerLink is for links that will direct the user within the app\n    // it will be rendered as <Link to=\"...\">...</Link> tag\n    innerLink: PropTypes.string,\n    // outterLink is for links that will direct the user outside the app\n    // it will be rendered as simple <a href=\"...\">...</a> tag\n    outterLink: PropTypes.string,\n    // the text of the logo\n    text: PropTypes.node,\n    // the image src of the logo\n    imgSrc: PropTypes.string\n  })\n};\n\nexport default Sidebar;\n","/*!\n\n=========================================================\n* Black Dashboard React v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, {useState, useEffect} from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n\n// reactstrap components\nimport {\n  Button,\n  Collapse,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  Input,\n  InputGroup,\n  NavbarBrand,\n  Navbar,\n  NavLink,\n  Nav,\n  Container,\n  Modal,\n} from \"reactstrap\";\nimport {useViewContext } from \"../../ViewContext\";\n\nconst AdminNavbar = (props) => {\n\n  const vx = useViewContext();\n\n  const [modalState, setModalState] = useState({\n      collapseOpen: false,\n      modalSearch: false,\n      color: \"navbar-transparent\"\n    });\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", updateColor);\n  }, [modalState]);\n\n  useEffect(() => {\n    window.removeEventListener(\"resize\", updateColor);\n  }, []);\n\n  // function that adds color white/transparent to the navbar on resize (this is for the collapse)\n  const updateColor = () => {\n    if (window.innerWidth < 993 && modalState.collapseOpen) {\n      setModalState({\n        color: \"bg-white\"\n      });\n    } else {\n      setModalState({\n        color: \"navbar-transparent\"\n      });\n    }\n  };\n  // this function opens and closes the collapse on small devices\n  const toggleCollapse = () => {\n    if (modalState.collapseOpen) {\n      setModalState({\n        color: \"navbar-transparent\"\n      });\n    } else {\n      setModalState({\n        color: \"bg-white\"\n      });\n    }\n    this.setState({\n      collapseOpen: !this.state.collapseOpen\n    });\n  };\n  // this function is to open the Search modal\n  const toggleModalSearch = () => {\n    setModalState({\n      modalSearch: !modalState.modalSearch\n    });\n  };\n\n  const setEventsView = () => {\n    if (!vx.loggedIn) {\n      return (\n      <div><NavLink tag=\"li\"></NavLink>\n      <DropdownItem className=\"nav-item\">\n        You are not logged in.\n      </DropdownItem></div>);\n    }\n    //var rows = vx.getEvents();\n    var rows = [];\n\n    if (rows.length == 0) \n      return(\n        <div><NavLink tag=\"li\"></NavLink>\n        <DropdownItem className=\"nav-item\">\n          No High severity events to report\n        </DropdownItem></div>      \n      )\n    \n    return(\n      rows.map((row, i) => ( <div  key={'\"div-pos-' + i + \"'\"}><NavLink tag=\"li\"  key={'\"link-pos-' + i + \"'\"}></NavLink>\n      <DropdownItem className=\"nav-item\" key={'\"dropdown-pos-' + i + \"'\"}>\n        {row.time}, {row.instance}, {row.message}\n      </DropdownItem></div>))\n    )\n  }\n\n  const style = { \n    bgColor: \"red\"\n  }\n  ;\n    return (\n      <>\n        <Navbar \n          className={classNames(\"navbar-absolute\", modalState.color)}\n          expand=\"lg\"\n        >\n          <Container fluid>\n            <div className=\"navbar-wrapper\">\n              <div\n                className={classNames(\"navbar-toggle d-inline\", {\n                  toggled: props.sidebarOpened\n                })}\n              >\n                <button style={style}\n                  className=\"navbar-toggler\"\n                  type=\"button\"\n                  onClick={props.toggleSidebar}\n                >\n                  <span className=\"navbar-toggler-bar bar1\" />\n                  <span className=\"navbar-toggler-bar bar2\" />\n                  <span className=\"navbar-toggler-bar bar3\" />\n                </button>\n              </div>\n              <NavbarBrand href=\"#pablo\" onClick={e => e.preventDefault()}>\n                {props.brandText}\n              </NavbarBrand>\n            </div>\n            <button\n              aria-expanded={false}\n              aria-label=\"Toggle navigation\"\n              className=\"navbar-toggler\"\n              data-target=\"#navigation\"\n              data-toggle=\"collapse\"\n              id=\"navigation\"\n              type=\"button\"\n              onClick={toggleCollapse}\n            >\n              <span className=\"navbar-toggler-bar navbar-kebab\" />\n              <span className=\"navbar-toggler-bar navbar-kebab\" />\n              <span className=\"navbar-toggler-bar navbar-kebab\" />\n            </button>\n            <Collapse navbar isOpen={modalState.collapseOpen}>\n              <Nav className=\"ml-auto\" navbar>\n                <InputGroup className=\"search-bar\">\n                  <Button\n                    color=\"link\"\n                    data-target=\"#searchModal\"\n                    data-toggle=\"modal\"\n                    id=\"search-button\"\n                    onClick={toggleModalSearch}\n                  >\n                    <i className=\"tim-icons icon-zoom-split\" />\n                    <span className=\"d-lg-none d-md-block\">Search</span>\n                  </Button>\n                </InputGroup>\n                <UncontrolledDropdown nav>\n                  <DropdownToggle\n                    caret\n                    color=\"default\"\n                    data-toggle=\"dropdown\"\n                    nav\n                  >\n                    <div className=\"notification d-none d-lg-block d-xl-block\" />\n                    <i className=\"tim-icons icon-sound-wave\" />\n                    <p className=\"d-lg-none\">Notifications</p>\n                  </DropdownToggle>\n                  <DropdownMenu className=\"dropdown-navbar\" right tag=\"ul\">\n                    {setEventsView()}\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n                <UncontrolledDropdown nav>\n                  <DropdownToggle\n                    caret\n                    color=\"default\"\n                    data-toggle=\"dropdown\"\n                    nav\n                    onClick={e => e.preventDefault()}\n                  >\n                    <div className=\"photo\">\n                      <img alt=\"...\" src={require(\"assets/img/anime3.png\")} />\n                    </div>\n                    <b className=\"caret d-none d-lg-block d-xl-block\" />\n                    <p className=\"d-lg-none\">Log out</p>\n                  </DropdownToggle>\n                  <DropdownMenu className=\"dropdown-navbar\" right tag=\"ul\">\n                    <NavLink tag=\"li\">\n                      <DropdownItem className=\"nav-item\">Profile</DropdownItem>\n                    </NavLink>\n                    <NavLink tag=\"li\">\n                      <DropdownItem className=\"nav-item\">Settings</DropdownItem>\n                    </NavLink>\n                    <DropdownItem divider tag=\"li\" />\n\n                    {!vx.loggedIn && <NavLink tag=\"li\">\n                      <DropdownItem className=\"nav-item\" onClick={e => vx.changeLoginState(true)} >Log in</DropdownItem>\n                    </NavLink>}\n                    {vx.loggedIn &&<NavLink tag=\"li\">\n                      <DropdownItem className=\"nav-item\" onClick={e => vx.changeLoginState(false)} >Log out</DropdownItem>\n                    </NavLink>}\n\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n                <li className=\"separator d-lg-none\" />\n              </Nav>\n            </Collapse>\n          </Container>\n        </Navbar>\n        <Modal\n          modalClassName=\"modal-search\"\n          isOpen={modalState.modalSearch}\n          toggle={toggleModalSearch}\n        >\n          <div className=\"modal-header\">\n            <Input id=\"inlineFormInputGroup\" placeholder=\"SEARCH\" type=\"text\" />\n            <button\n              aria-label=\"Close\"\n              className=\"close\"\n              data-dismiss=\"modal\"\n              type=\"button\"\n              onClick={toggleModalSearch}\n            >\n              <i className=\"tim-icons icon-simple-remove\" />\n            </button>\n          </div>\n        </Modal>\n      </>\n    );\n}\n\nexport default AdminNavbar;\n","/*!\n\n=========================================================\n* Black Dashboard React v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n/*eslint-disable*/\nimport React from \"react\";\n// used for making the prop types of this component\nimport PropTypes from \"prop-types\";\n\n// reactstrap components\nimport { Container, Row, Nav, NavItem, NavLink } from \"reactstrap\";\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer className=\"footer\">\n        <Container fluid>\n          <Nav>\n            <NavItem>\n              <NavLink href=\"javascript:void(0)\">JACAMARS, Inc.</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"http://rtb4free.com/#about\">About Us</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"http://rtb4free.com/blog_link.html\">Blog</NavLink>\n            </NavItem>\n          </Nav>\n          <div className=\"copyright\">\n            © {new Date().getFullYear()} made with{\" \"}\n            <i className=\"tim-icons icon-heart-2\" /> by{\" \"}\n            <a\n              href=\"javascript:void(0)\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              RTB4FREE\n            </a>{\" \"}\n            for a better web.\n          </div>\n        </Container>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","/*!\n\n=========================================================\n* Black Dashboard React v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Component } from \"react\";\n\n// reactstrap components\nimport { Button } from \"reactstrap\";\n\nclass FixedPlugin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      classes: \"dropdown show-dropdown\"\n    };\n  }\n  handleClick = () => {\n    if (this.state.classes === \"dropdown show-dropdown\") {\n      this.setState({ classes: \"dropdown show-dropdown show\" });\n    } else {\n      this.setState({ classes: \"dropdown show-dropdown\" });\n    }\n  };\n  activateMode = mode => {\n    switch (mode) {\n      case \"light\":\n        document.body.classList.add(\"white-content\");\n        break;\n      default:\n        document.body.classList.remove(\"white-content\");\n        break;\n    }\n  };\n  render() {\n    return (\n      <div className=\"fixed-plugin\">\n        <div className={this.state.classes}>\n          <div onClick={this.handleClick}>\n            <i className=\"fa fa-cog fa-2x\" />\n          </div>\n          <ul className=\"dropdown-menu show\">\n            <li className=\"header-title\">SIDEBAR BACKGROUND</li>\n            <li className=\"adjustments-line\">\n              <div className=\"badge-colors text-center\">\n                <span\n                  className={\n                    this.props.bgColor === \"primary\"\n                      ? \"badge filter badge-primary active\"\n                      : \"badge filter badge-primary\"\n                  }\n                  data-color=\"primary\"\n                  onClick={() => {\n                    this.props.handleBgClick(\"primary\");\n                  }}\n                />{\" \"}\n                <span\n                  className={\n                    this.props.bgColor === \"blue\"\n                      ? \"badge filter badge-info active\"\n                      : \"badge filter badge-info\"\n                  }\n                  data-color=\"blue\"\n                  onClick={() => {\n                    this.props.handleBgClick(\"blue\");\n                  }}\n                />{\" \"}\n                <span\n                  className={\n                    this.props.bgColor === \"green\"\n                      ? \"badge filter badge-success active\"\n                      : \"badge filter badge-success\"\n                  }\n                  data-color=\"green\"\n                  onClick={() => {\n                    this.props.handleBgClick(\"green\");\n                  }}\n                />{\" \"}\n              </div>\n            </li>\n            <li className=\"adjustments-line text-center color-change\">\n              <span className=\"color-label\">LIGHT MODE</span>{\" \"}\n              <span\n                className=\"badge light-badge mr-2\"\n                onClick={() => this.activateMode(\"light\")}\n              />{\" \"}\n              <span\n                className=\"badge dark-badge ml-2\"\n                onClick={() => this.activateMode(\"dark\")}\n              />{\" \"}\n              <span className=\"color-label\">DARK MODE</span>{\" \"}\n            </li>\n            <li className=\"button-container\">\n              <Button\n                href=\"http://rtb4free.com\"\n                color=\"primary\"\n                block\n                className=\"btn-round\"\n                target=\"_blank\"\n              >\n                Home Page\n              </Button>\n              <Button\n                color=\"default\"\n                block\n                className=\"btn-round\"\n                outline\n                href=\"http://rtb4free.com/controlpanel.html\"\n                target=\"_blank\"\n              >\n                Documentation\n              </Button>\n            </li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FixedPlugin;\n","import React, { useState } from 'react';\nimport { Button, Col, Input, FormGroup, Label, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport {useViewContext } from \"./ViewContext\";\n\nvar undef;\n\nconst LoginModal = (props) => {\n\n  const vx = useViewContext();\n\n  const [name, setName] = useState('rtb4free');\n  const [password, setPassword] = useState('');\n  const [server, setServer] = useState('localhost:7379');\n\n  const changeName = (event) => {\n    setName(event.target.value);\n  }\n\n  const changePassword = (event) => {\n    setPassword(event.target.value);\n  }\n\n  const changeServer = (event) => {\n      setServer(event.target.value);\n  }\n\n  const login = async () => {\n    var mx = await vx.listCampaigns(name,password,server);\n    if (mx === undef)\n      return;\n    console.log(\"Campaigns = \" + mx.length);\n    await vx.getAccounting();\n    await vx.getDbCampaigns();\n    mx = await vx.getBidders();\n    if (mx === undef)\n      return;\n    console.log(\"Bidders = \" + mx.length);\n    vx.changeLoginState(true);\n    props.callback(mx,server);\n  }\n\n  // in dark mode, the text is white, but this won't work here.... It will appear invisible in the field\n  let estyle = {\n    color: 'black'\n  }\n\n  return (\n    <>\n    <div>\n      <Modal isOpen={!vx.loggedIn}>\n        <ModalBody>\n        <FormGroup row>\n            <Label for=\"username\" sm={2}>User</Label>\n            <Col sm={10}>\n                <Input style={estyle} type=\"text\" id=\"username\" placeholder={name} onChange={changeName}/>\n            </Col>\n        </FormGroup>\n        <FormGroup row>\n            <Label for=\"password\" sm={2}>Password:</Label>\n            <Col sm={10}>\n                <Input style={estyle} type=\"password\" id=\"password\"  placeholder=\"********\"  onChange={changePassword} />\n            </Col>\n        </FormGroup>\n        <FormGroup row>\n            <Label for=\"server\" sm={2}>Server:</Label>\n            <Col sm={10}>\n            <Input style={estyle} type=\"text\" id=\"server\"  placeholder={server}  onChange={changeServer} />\n            </Col>\n        </FormGroup>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={login}>Login</Button>{' '}\n        </ModalFooter>\n      </Modal>\n    </div>\n    </>\n  );\n}\n\nexport default LoginModal;","import React, { useState, useEffect } from \"react\";\n\n// reactstrap components\nimport {\n  Badge,\n  Button,\n  ButtonGroup,\n  ButtonToolbar,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Table,\n  Row,\n  Col\n} from \"reactstrap\";\nimport { useViewContext } from \"../ViewContext\";\nimport LoginModal from '../LoginModal'\n\nvar undef;\n\n const Dashboard = (props) => {\n\n  const vx = useViewContext();\n  const [count, setCount] = useState(0);\n\n  const refresh = async() => {\n    await vx.getBidders();\n    await vx.listCampaigns();\n    setCount(count+1);\n  }\n\n  const setInstances = () => {\n\n  };\n\n  const setBiddersView = (rows) => {\n        if (rows === undef)\n          return null;\n        return(\n          rows.map((row, index) => (\n            <tr key={'bidders-' + index}>\n              <td key={'bidders-index-' + index}>{index+1}</td>\n              <td key={'bidders-address-' + index} className=\"text-left\">{row.from}</td>\n              <td key={'bidders-leader-' + index} className=\"text-right\">{row.leader.toString()}</td>\n              <td key={'bidders-stopped-' + index} className=\"text-right\">{row.stopped.toString()}</td>\n              <td key={'bidders-error-' + index} className=\"text-right\">{row.error.toString()}</td>\n              <td key={'bidders-bid-' + index} className=\"text-right\">{row.bid.toString()}</td>\n              <td key={'bidders-nobid-' + index} className=\"text-right\">{row.nobid.toString()}</td>\n              <td key={'bidders-qps-' + index} className=\"text-right\">{row.qps.toString()}</td>\n              <td key={'bidders-avgx-' + index} className=\"text-right\">{row.avgx[row.avgx.length-1].toString()}</td>\n            </tr>))\n        )\n      }\n\n    const setCampaignsView = (rows,acc) => {\n        console.log(\"ACC: \" + JSON.stringify(acc,null,2));\n        return(\n          rows.map((row, index) => (\n            <tr key={'camps-' + index}>\n              <td key={'camps-index-' + index}>{index+1}</td>\n              <td key={'camps-name-' + index} className=\"text-left\">{row}</td> \n              <td key={'camps-bids-' + index} className=\"text-right\">{vx.getCount(acc,row+\".bids\")}</td>\n              <td key={'camps-wins-' + index} className=\"text-right\">{vx.getCount(acc,row+\".wins\")}</td>\n              <td key={'bidders-pixels-' + index} className=\"text-right\">{vx.getCount(acc,row+\".pixels\")}</td>\n              <td key={'bidders-clicks-' + index} className=\"text-right\">{vx.getCount(acc,row+\".clicks\")}</td>\n              <td key={'bidders-adspend-' + index} className=\"text-right\">{vx.getCount(acc,row+\".adspend\")/100000}</td>\n            </tr>))\n        );\n      }\n\n  return (\n    <div className=\"content\">\n    { !vx.isLoggedIn && <LoginModal callback={setInstances} />}\n        <Row>\n            <Col xs=\"12\">\n            <Button size=\"sm\" color=\"error\" onClick={refresh}>Refresh</Button>\n                <Card className=\"card-chart\">\n                    <CardHeader>\n                        <Row>\n                            <CardTitle tag=\"h2\">Instances</CardTitle>\n                        </Row>\n                    </CardHeader>\n                    <CardBody>\n                      <Table key={\"bidders-table-\"+count} size=\"sm\">\n                        <thead>\n                          <tr>\n                            <th>#</th>\n                            <th className=\"text-center\">Instance</th>\n                            <th className=\"text-right\">Leader</th>\n                            <th className=\"text-right\">Stopped</th>\n                            <th className=\"text-right\">Error</th>\n                            <th className=\"text-right\">Bid</th>\n                            <th className=\"text-right\">Nobid</th>\n                            <th className=\"text-right\">QPS</th>\n                            <th className=\"text-right\">AVGX</th>\n                          </tr>\n                      </thead>\n                      <tbody>\n                        { setBiddersView(vx.bidders) }\n                      </tbody>\n                    </Table>\n                  </CardBody>\n                </Card>\n                <Card className=\"card-chart\">\n                    <CardHeader>\n                        <Row>\n                            <CardTitle tag=\"h2\">Running Campaigns</CardTitle>\n                        </Row>\n                    </CardHeader>\n                    <CardBody>\n                      <Table key={\"camps-table-\"+count}size=\"sm\">\n                        <thead>\n                          <tr>\n                            <th>#</th>\n                            <th className=\"text-center\">Campaign</th>\n                            <th className=\"text-right\">Bids</th>\n                            <th className=\"text-right\">Wins</th>\n                            <th className=\"text-right\">Pixels</th>\n                            <th className=\"text-right\">Clicks</th>\n                            <th className=\"text-right\">Spend</th>\n                          </tr>\n                      </thead>\n                      <tbody>\n                        { setCampaignsView(vx.runningCampaigns,vx.accounting) }\n                      </tbody>\n                    </Table>\n                  </CardBody>\n                </Card>\n            </Col>\n        </Row>\n    </div>\n  );\n }\n\n export default Dashboard;","/*!\n\n=========================================================\n* Black Dashboard React v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Table,\n  Row,\n  Col\n} from \"reactstrap\";\n\nclass Tables extends React.Component {\n  render() {\n    return (\n      <>\n        <div className=\"content\">\n          <Row>\n            <Col md=\"12\">\n              <Card>\n                <CardHeader>\n                  <CardTitle tag=\"h4\">Simple Table</CardTitle>\n                </CardHeader>\n                <CardBody>\n                  <Table className=\"tablesorter\" responsive>\n                    <thead className=\"text-primary\">\n                      <tr>\n                        <th>Name</th>\n                        <th>Country</th>\n                        <th>City</th>\n                        <th className=\"text-center\">Salary</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr>\n                        <td>Dakota Rice</td>\n                        <td>Niger</td>\n                        <td>Oud-Turnhout</td>\n                        <td className=\"text-center\">$36,738</td>\n                      </tr>\n                      <tr>\n                        <td>Minerva Hooper</td>\n                        <td>Curaçao</td>\n                        <td>Sinaai-Waas</td>\n                        <td className=\"text-center\">$23,789</td>\n                      </tr>\n                      <tr>\n                        <td>Sage Rodriguez</td>\n                        <td>Netherlands</td>\n                        <td>Baileux</td>\n                        <td className=\"text-center\">$56,142</td>\n                      </tr>\n                      <tr>\n                        <td>Philip Chaney</td>\n                        <td>Korea, South</td>\n                        <td>Overland Park</td>\n                        <td className=\"text-center\">$38,735</td>\n                      </tr>\n                      <tr>\n                        <td>Doris Greene</td>\n                        <td>Malawi</td>\n                        <td>Feldkirchen in Kärnten</td>\n                        <td className=\"text-center\">$63,542</td>\n                      </tr>\n                      <tr>\n                        <td>Mason Porter</td>\n                        <td>Chile</td>\n                        <td>Gloucester</td>\n                        <td className=\"text-center\">$78,615</td>\n                      </tr>\n                      <tr>\n                        <td>Jon Porter</td>\n                        <td>Portugal</td>\n                        <td>Gloucester</td>\n                        <td className=\"text-center\">$98,615</td>\n                      </tr>\n                    </tbody>\n                  </Table>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col md=\"12\">\n              <Card className=\"card-plain\">\n                <CardHeader>\n                  <CardTitle tag=\"h4\">Table on Plain Background</CardTitle>\n                  <p className=\"category\">Here is a subtitle for this table</p>\n                </CardHeader>\n                <CardBody>\n                  <Table className=\"tablesorter\" responsive>\n                    <thead className=\"text-primary\">\n                      <tr>\n                        <th>Name</th>\n                        <th>Country</th>\n                        <th>City</th>\n                        <th className=\"text-center\">Salary</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr>\n                        <td>Dakota Rice</td>\n                        <td>Niger</td>\n                        <td>Oud-Turnhout</td>\n                        <td className=\"text-center\">$36,738</td>\n                      </tr>\n                      <tr>\n                        <td>Minerva Hooper</td>\n                        <td>Curaçao</td>\n                        <td>Sinaai-Waas</td>\n                        <td className=\"text-center\">$23,789</td>\n                      </tr>\n                      <tr>\n                        <td>Sage Rodriguez</td>\n                        <td>Netherlands</td>\n                        <td>Baileux</td>\n                        <td className=\"text-center\">$56,142</td>\n                      </tr>\n                      <tr>\n                        <td>Philip Chaney</td>\n                        <td>Korea, South</td>\n                        <td>Overland Park</td>\n                        <td className=\"text-center\">$38,735</td>\n                      </tr>\n                      <tr>\n                        <td>Doris Greene</td>\n                        <td>Malawi</td>\n                        <td>Feldkirchen in Kärnten</td>\n                        <td className=\"text-center\">$63,542</td>\n                      </tr>\n                      <tr>\n                        <td>Mason Porter</td>\n                        <td>Chile</td>\n                        <td>Gloucester</td>\n                        <td className=\"text-center\">$78,615</td>\n                      </tr>\n                      <tr>\n                        <td>Jon Porter</td>\n                        <td>Portugal</td>\n                        <td>Gloucester</td>\n                        <td className=\"text-center\">$98,615</td>\n                      </tr>\n                    </tbody>\n                  </Table>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Tables;\n","import React, { useState, useEffect } from \"react\";\n\n// reactstrap components\nimport {\n  Badge,\n  Button,\n  ButtonGroup,\n  ButtonToolbar,\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  CardText,\n\n  CardTitle,\n  Form,\n  FormGroup,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  Table,\n  Label,\n  Row,\n  Col\n} from \"reactstrap\";\nimport { useViewContext } from \"../../ViewContext\";\n\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n\nvar undef;\n\nconst CampaignEditor = (props) => {\n\n  const [count, setCount] = useState(0);\n  const [campaign, setCampaign] = useState(props.campaign);\n  const [startDate, setStartDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(new Date());\n  const vx = useViewContext();\n\nconst getAttachedCreatives = () => {\n    return(\n        <>\n        <option>Creative 1</option>\n        <option>Creative 2</option>\n        <option>Creative 3</option>\n        </>\n    );\n}\n\nconst  addNewCampaign = async () => {\n    var x = campaign;\n    x.name = document.getElementById(\"name\").value;\n    x.target = document.getElementById(\"target\").value;\n    x.adomain = document.getElementById(\"adomain\").value;\n    if (startDate != null) {\n      x.date = [];\n      x.date.push(startDate.getTime());\n      x.date.push(endDate.getTime());\n    }\n    if (!x.adomain) { alert(\"Ad Domain cannot be blank\"); return; }\n\n    props.callback(x);\n}\n\nconst getTrueFalseOptions = (value)  =>{\n    if (value)\n        return(\n            <>\n            <option selected>true</option>\n            <option>false</option>\n            </>\n        );\n        return(\n            <>\n            <option>true</option>\n            <option selected>false</option>\n            </>\n        );\n}\n\nconst getSelectedExchangeOptions = () => {\n    return(\n        <>\n        <option>Adx</option>\n        <option>Bidswitch</option>\n        <option>Nexage</option>\n        <option>Openx</option>\n        <option>Smaato</option>\n        <option>Stroer</option>\n        </>\n    );\n}\n\nconst getSelectedRules = () => {\n    return(\n        <>\n        <option>Rule 1</option>\n        <option>Rule 2</option>\n        <option>Rule 3</option>\n        <option>Rule 4</option>\n        <option>Rule 5</option>\n        <option>Rule 6</option>\n        </>\n    );\n}\n\nconst getSelectedTargets = () => {\n    return(\n        <>\n        <option>Target 1</option>\n        <option>Target 2</option>\n        <option>Target 3</option>\n        <option>Target 4</option>\n        <option>Target 5</option>\n        </>\n    );\n}\n\nconst getSelectedRegions = () => {\n    return(\n        <>\n        <option>US</option>\n        <option>APAC</option>\n        <option>EUROPE</option>\n        <option>Russia</option>\n        </>\n    )\n}\n\n  const redraw = () => {\n      setCount(count+1);\n  }\n\n  const update = () => {\n      props.callback(true);\n  }\n\n  const discard = () => {\n      props.callback(false);\n  }\n\n  const getLabel = () => {\n      if (campaign.sqlid === -1)\n        return (<div>Save</div>);\n      return(<div>Update</div>);\n  }\n\n        return (\n            <>\n              <div className=\"content\">\n                <Row>\n                  <Col>\n                    <Card>\n                      <CardHeader>\n                        <h5 className=\"title\">Edit Campaign Details</h5>\n                      </CardHeader>\n                      <CardBody>\n                        <Form>\n                          <Row>\n                            <Col className=\"pr-md-1\" md=\"2\">\n                              <FormGroup>\n                                <label>SQL ID (disabled)</label>\n                                <Input\n                                  defaultValue={campaign.id}\n                                  disabled\n                                  type=\"text\"\n                                />\n                              </FormGroup>\n                            </Col>\n                            <Col className=\"px-md-1\" md=\"3\">\n                              <FormGroup>\n                                <label>Name</label>\n                                <Input\n                                  id=\"name\"\n                                  defaultValue={campaign.name}\n                                  placeholder=\"Campaign Name/Ad Id (Required)\"\n                                  type=\"text\"\n                                />\n                              </FormGroup>\n                            </Col>\n                            <Col className=\"pl-md-1\" md=\"5\">\n                              <FormGroup>\n                                <label htmlFor=\"addomain\">\n                                  Ad Domain\n                                </label>\n                                <Input \n                                  id=\"adomain\"\n                                  placeholder=\"Ad domain (required)\"\n                                  defaultValue={campaign.adomain}\n                                  type=\"text\" />\n                              </FormGroup>\n                            </Col>\n                            <Col className=\"pl-md-1\" md=\"2\">\n                              <FormGroup>\n                              <Label for=\"exampleSelect\" >Fraud</Label>\n                                <Input type=\"select\" name=\"select\" id=\"exampleSelect\">\n                                    {getTrueFalseOptions(campaign.forensiq)}\n                                </Input>               \n                              </FormGroup>\n                            </Col>\n                          </Row>\n                          <Row>\n                            <Col className=\"pr-md-1\" md=\"12\">\n                              <FormGroup>\n                                <label>Creatives</label>\n                                <Input\n                                    id=\"campaign\"\n                                    type=\"select\" multiple>\n                                    {getAttachedCreatives()}\n                                </Input>\n                              </FormGroup>\n                            </Col>\n                          </Row>\n                          <Row>\n                            <Col className=\"pr-md-1\" md=\"4\">\n                              <FormGroup>\n                                <label>Start</label>\n                                <Col >\n                                <DatePicker\n                                    id=\"start\"\n                                    selected={startDate}\n                                    onChange={date => setStartDate(date)}\n                                    showTimeSelect\n                                    timeFormat=\"HH:mm\"\n                                    timeIntervals={15}\n                                    timeCaption=\"time\"\n                                    dateFormat=\"MMMM d, yyyy h:mm aa\"\n                                />\n                               </Col>\n                              </FormGroup>\n                            </Col>\n                            <Col className=\"pr-md-1\" md=\"4\">\n                              <FormGroup>\n                                <label>End</label>\n                                <Col>\n                                <DatePicker\n                                    id=\"end\"\n                                    selected={endDate}\n                                    onChange={date => setEndDate(date)}\n                                    showTimeSelect\n                                    timeFormat=\"HH:mm\"\n                                    timeIntervals={15}\n                                    timeCaption=\"time\"\n                                    dateFormat=\"MMMM d, yyyy h:mm aa\"\n                                />\n                                </Col>\n                                </FormGroup>\n                             </Col>\n                             <Col className=\"px-md-1\" md=\"3\">\n                              <FormGroup>\n                                <label>Spend Rate/Minute</label>\n                                <Input id=\"spendRate\"\n                                  defaultValue={campaign.assignedSpendRate}\n                                  type=\"text\"\n                                />\n                              </FormGroup>\n                            </Col>\n                          </Row>\n                          <Row>\n                            <Col md=\"4\">\n                              <FormGroup>\n                                <label>Frequency Cap Variable</label>\n                                <Input id=\"freq_variable\"\n                                  defaultValue=\"request.device.ip\"\n                                  placeholder=\"RTB variable to frequency cap on\"\n                                  type=\"text\"\n                                />\n                              </FormGroup>\n                            </Col>\n                            <Col md=\"4\">\n                              <FormGroup>\n                                <label>Frequency Limit</label>\n                                <Input id='freq_limit\"'\n                                  defaultValue=\"0\"\n                                  placeholder=\"Max number\"\n                                  type=\"text\"\n                                />\n                              </FormGroup>\n                            </Col>\n                            <Col md=\"4\">\n                              <FormGroup>\n                                <label>Duration</label>\n                                <Input id=\"duration\"\n                                  defaultValue=\"0\"\n                                  placeholder=\"Duration in minutes\"\n                                  type=\"text\"\n                                />\n                              </FormGroup>\n                            </Col>\n                          </Row>\n                          <Row>\n                            <Col className=\"pr-md-1\" md=\"4\">\n                              <FormGroup>\n                                <label>Region</label>\n                                <Input type=\"select\" id=\"region\" multiple>\n                                    {getSelectedRegions()}\n                                </Input>\n                              </FormGroup>\n                            </Col>\n                            <Col className=\"px-md-1\" md=\"4\">\n                              <FormGroup>\n                                <label>Exchanges</label>\n                                <Input type=\"select\" name=\"select\" id=\"exchanges\" multiple>\n                                    {getSelectedExchangeOptions()}\n                                </Input>     \n                              </FormGroup>\n                            </Col>\n                            <Col className=\"pl-md-1\" md=\"4\">\n                              <FormGroup>\n                                <label>Target</label>\n                                <Input type=\"select\" id=\"target\">\n                                    {getSelectedTargets()}\n                                </Input>\n                              </FormGroup>\n                            </Col>\n                          </Row>\n                          <Row>\n                            <Col className=\"pr-md-1\" md=\"4\">\n                              <FormGroup>\n                              <label>Rules</label>\n                                <Input type=\"select\" name=\"select\" id=\"rules\" multiple>\n                                    {getSelectedRules()}\n                                </Input>     \n                              </FormGroup>\n                            </Col>\n                            <Col className=\"px-md-1\" md=\"2\">\n                              <FormGroup>\n                                <label>Total Budget</label>\n                                <Input placeholder=\"0\" type=\"number\" id=\"total_budget\"/>\n                              </FormGroup>\n                            </Col>\n                            <Col className=\"pl-md-1\" md=\"2\">\n                              <FormGroup>\n                                <label>Daily Budget</label>\n                                <Input placeholder=\"0\" type=\"number\" id=\"daily_budget\"/>\n                              </FormGroup>\n                            </Col>\n                            <Col className=\"pl-md-1\" md=\"2\">\n                              <FormGroup>\n                                <label>Hourly Budget</label>\n                                <Input placeholder=\"0\" type=\"number\" id=\"hourly_budget\" />\n                              </FormGroup>\n                            </Col>\n                          </Row>\n                        </Form>\n                      </CardBody>\n                      <CardFooter>\n                        <Button className=\"btn-fill\" c\n                          color=\"primary\" \n                          type=\"submit\"\n                          onClick={() => addNewCampaign()}\n                         >\n                          Save\n                        </Button>\n                        <Button className=\"btn-fill\" color=\"danger\" type=\"submit\" \n                            onClick={() => props.callback(null)}>\n                          Discard\n                        </Button>\n                      </CardFooter>\n                    </Card>\n                  </Col>\n     \n                </Row>\n              </div>\n            </>\n          );\n }\n export default CampaignEditor;","import React, { useState, useEffect } from \"react\";\n\n// reactstrap components\nimport {\n  Badge,\n  Button,\n  ButtonGroup,\n  ButtonToolbar,\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  CardText,\n\n  CardTitle,\n  Form,\n  FormGroup,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  Table,\n  Label,\n  Row,\n  Col\n} from \"reactstrap\";\nimport { useViewContext } from \"../../ViewContext\";\n\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n\nvar undef;\n\nconst TargetEditor = (props) => {\n\n  const [count, setCount] = useState(0);\n  const [target, setTarget] = useState(props.target);\n  const [startDate, setStartDate] = useState(new Date());\n  const vx = useViewContext();\n\n  const nameChangedHandler = (event) => {\n      target.name = event.target.value;\n      setTarget(target);\n  }\n  \n\nconst getTrueFalseOptions = (value)  =>{\n    if (value)\n        return(\n            <>\n            <option selected>true</option>\n            <option>false</option>\n            </>\n        );\n        return(\n            <>\n            <option>true</option>\n            <option selected>false</option>\n            </>\n        );\n}\n\nconst getSelectedExchangeOptions = () => {\n    return(\n        <>\n        <option>Adx</option>\n        <option>Bidswitch</option>\n        <option>Nexage</option>\n        <option>Openx</option>\n        <option>Smaato</option>\n        <option>Stroer</option>\n        </>\n    );\n}\n\nconst getDomainTypes = () => {\n    return(\n        <>\n        </>\n    );\n}\n\nconst getDomainValues = () => {\n    return(\n        <>\n        </>\n    );\n}\n\n\nconst getBigDataSet = () => {\n    return(\n        <>\n        </>\n    );\n}\n\nconst getSelectedCountries = () => {\n    return(\n        <>\n        </>\n    )\n}\n\nconst getSelectedModels = () => {\n    return(\n        <>\n        </>\n    )\n}\n\nconst getSelectedMakes = () => {\n    return(\n        <>\n        </>\n    )\n}\n\nconst getSelectedDeviceTypes = () => {\n    return(\n        <>\n        </>\n    )\n}\n\nconst getWhiteList = () => {\n    return(\n        <>\n        </>\n    )\n}\n\nconst getBlackList = () => {\n    return(\n        <>\n        </>\n    )\n}\n\n  const redraw = () => {\n      setCount(count+1);\n  }\n\n  const update = () => {\n      props.callback(true);\n  }\n\n  const discard = () => {\n      props.callback(false);\n  }\n\n  const getLabel = () => {\n      if (target.id === 0)\n        return (<div>Save</div>);\n      return(<div>Update</div>);\n  }\n\n        return (\n            <>\n              <div className=\"content\">\n                <Row>\n                  <Col>\n                    <Card>\n                      <CardHeader>\n                        <h5 className=\"title\">Edit Targeting Details</h5>\n                      </CardHeader>\n                      <CardBody>\n                        <Form>\n                          <Row>\n                            <Col className=\"pr-md-1\" md=\"2\">\n                              <FormGroup>\n                                <label>SQL ID (disabled)</label>\n                                <Input\n                                  defaultValue={target.id}\n                                  disabled\n                                  type=\"text\"\n                                />\n                              </FormGroup>\n                            </Col>\n                            <Col className=\"px-md-1\" md=\"3\">\n                              <FormGroup>\n                                <label>Ad Id</label>\n                                <Input\n                                  defaultValue={target.name}\n                                  placeholder=\"Target Name (Required)\"\n                                  type=\"text\"\n                                />\n                              </FormGroup>\n                            </Col>\n                          </Row>\n                          <Row>\n                            <Col className=\"pr-md-1\" md=\"4\">\n                              <FormGroup>\n                                <label>Start</label>\n                                <Col >\n                                <DatePicker\n                                    selected={startDate}\n                                    onChange={date => setStartDate(date)}\n                                    showTimeSelect\n                                    timeFormat=\"HH:mm\"\n                                    timeIntervals={15}\n                                    timeCaption=\"time\"\n                                    dateFormat=\"MMMM d, yyyy h:mm aa\"\n                                />\n                               </Col>\n                              </FormGroup>\n                            </Col>\n                            <Col className=\"pr-md-1\" md=\"4\">\n                              <FormGroup>\n                                <label>End</label>\n                                <Col>\n                                <DatePicker\n                                    selected={startDate}\n                                    onChange={date => setStartDate(date)}\n                                    showTimeSelect\n                                    timeFormat=\"HH:mm\"\n                                    timeIntervals={15}\n                                    timeCaption=\"time\"\n                                    dateFormat=\"MMMM d, yyyy h:mm aa\"\n                                />\n                                </Col>\n                                </FormGroup>\n                             </Col>\n                          </Row>\n                          <Row>\n                            <Col className=\"pr-md-1\" md=\"4\">\n                              <FormGroup>\n                                <label>Domain List Type</label>\n                                <Input type=\"select\" id=\"region\" >\n                                    {getDomainTypes()}\n                                </Input>\n                              </FormGroup>\n                            </Col>\n                            <Col className=\"px-md-1\" md=\"4\">\n                              <FormGroup>\n                                <label>Domain Values</label>\n                                <Input type=\"select\" name=\"select\" id=\"exchanges\" multiple>\n                                    {getDomainValues()}\n                                </Input>     \n                              </FormGroup>\n                            </Col>\n                            <Col className=\"pl-md-1\" md=\"4\">\n                              <FormGroup>\n                                <label>Use Big Data Set for Domain Values</label>\n                                <Input type=\"select\" id=\"target\">\n                                    {getBigDataSet()}\n                                </Input>\n                              </FormGroup>\n                            </Col>\n                          </Row>\n                          <Row>   \n                            <Col className=\"pr-md-1\" md=\"4\">\n                              <FormGroup>\n                              <label>Geo Latitude</label>\n                                <Input type=\"input\" name=\"text\" id=\"latitude\" defaultValue={target.lat}/>   \n                              </FormGroup>\n                            </Col>\n                            <Col className=\"px-md-1\" md=\"2\">\n                              <FormGroup>\n                              <label>Geo Longitude</label>\n                                <Input type=\"input\" name=\"text\" id=\"longitude\" defaultValue={target.lon}/>   \n                              </FormGroup>\n                              </Col>\n                              <Col className=\"px-md-1\" md=\"2\">\n                              <FormGroup>\n                              <label>Geo Range</label>\n                                <Input type=\"input\" name=\"text\" id=\"rane\" defaultValue={target.range}/>   \n                              </FormGroup>\n                            </Col>\n                          </Row>\n                          <Row>\n                          <Col className=\"pr-md-1\" md=\"4\">\n                            <FormGroup>\n                              <label>Geo Region</label>\n                                <Input type=\"input\" name=\"text\" id=\"region\" defaultValue={target.region}/>   \n                              </FormGroup>\n                            </Col>\n                            <Col className=\"px-md-1\" md=\"2\">\n                             <FormGroup>\n                              <label>Rules</label>\n                                <Input type=\"select\" name=\"select\" id=\"countries\" multiple>\n                                    {getSelectedCountries()}\n                                </Input>     \n                              </FormGroup>\n                            </Col>\n                            <Col className=\"pr-md-1\" md=\"4\">\n                            <FormGroup>\n                              <label>Carrier</label>\n                                <Input type=\"input\" name=\"text\" id=\"region\" defaultValue={target.region}/>   \n                              </FormGroup>\n                            </Col>\n                          </Row>\n                          <Row>\n                           <Col className=\"pr-md-1\" md=\"4\">\n                            <FormGroup>\n                              <label>Operating System</label>\n                                <Input type=\"input\" name=\"text\" id=\"os\" defaultValue={target.os}/>   \n                              </FormGroup>\n                            </Col>\n                            <Col className=\"px-md-1\" md=\"2\">\n                             <FormGroup>\n                              <label>Make</label>\n                                <Input type=\"select\" name=\"select\" id=\"makes\" multiple>\n                                    {getSelectedMakes()}\n                                </Input>     \n                              </FormGroup>\n                            </Col>\n                            <Col className=\"pr-md-1\" md=\"4\">\n                            <FormGroup>\n                                <label>Make</label>\n                                <Input type=\"select\" name=\"select\" id=\"models\" multiple>\n                                    {getSelectedModels()}\n                                </Input>     \n                            </FormGroup>\n                            </Col>     \n                            <Col className=\"pr-md-1\" md=\"4\">\n                                <FormGroup>\n                                    <label>Device Types</label>\n                                    <Input type=\"select\" name=\"select\" id=\"device-types\" multiple>\n                                        {getSelectedDeviceTypes()}\n                                    </Input>     \n                                </FormGroup>\n                            </Col>                           \n                          </Row>\n                          <Row>\n                            <Col>\n                                <FormGroup>\n                                    <label>IAB Whitelist</label>\n                                    <Input type=\"select\" name=\"select\" id=\"whitelist\" multiple>\n                                        {getWhiteList()}\n                                    </Input>     \n                                </FormGroup>    \n                            </Col>\n                            <Col>\n                                <FormGroup>\n                                    <label>IAB Blacklist</label>\n                                    <Input type=\"select\" name=\"select\" id=\"blacklist\" multiple>\n                                        {getBlackList()}\n                                    </Input>     \n                                </FormGroup>    \n                            </Col>\n                          </Row>\n                        </Form>\n                      </CardBody>\n                      <CardFooter>\n                        <Button className=\"btn-fill\" color=\"primary\" \n                            type=\"submit\" onClick={() => props.callback(target)}>\n                          Save\n                        </Button>\n                        <Button className=\"btn-fill\" color=\"danger\" type=\"submit\" \n                            onClick={() => props.callback(null)}>\n                          Discard\n                        </Button>\n                      </CardFooter>\n                    </Card>\n                  </Col>\n                </Row>\n              </div>\n            </>\n          );\n }\n export default TargetEditor;","import React, { useState, useEffect } from \"react\";\n\n// reactstrap components\nimport {\n  Badge,\n  Button,\n  ButtonGroup,\n  ButtonToolbar,\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  CardText,\n\n  CardTitle,\n  Form,\n  FormGroup,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  Table,\n  Label,\n  Row,\n  Col\n} from \"reactstrap\";\nimport { useViewContext } from \"../../ViewContext\";\n\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n\nvar undef;\n\nconst CampaignEditor = (props) => {\n\n  const [count, setCount] = useState(0);\n  const [creative, setCreative] = useState(props.creative);\n  const [startDate, setStartDate] = useState(new Date());\n  const vx = useViewContext();\n\n\nconst getTrueFalseOptions = (value)  =>{\n    if (value)\n        return(\n            <>\n            <option selected>true</option>\n            <option>false</option>\n            </>\n        );\n        return(\n            <>\n            <option>true</option>\n            <option selected>false</option>\n            </>\n        );\n}\n\nconst getAttachedCampaign = () => {\n    return(\n        <>\n        <option>None</option>\n        </>\n    );\n}\n\n\nconst getSelectedRules = () => {\n    return(\n        <>\n        <option>Rule 1</option>\n        <option>Rule 2</option>\n        <option>Rule 3</option>\n        <option>Rule 4</option>\n        <option>Rule 5</option>\n        <option>Rule 6</option>\n        </>\n    );\n}\n\n  const redraw = () => {\n      setCount(count+1);\n  }\n\n  const update = () => {\n      props.callback(true);\n  }\n\n  const discard = () => {\n      props.callback(false);\n  }\n\n  const getLabel = () => {\n      if (creative.id === 0)\n        return (<div>Save</div>);\n      return(<div>Update</div>);\n  }\n\n        return (\n            <>\n              <div className=\"content\">\n                <Row>\n                  <Col>\n                    <Card>\n                      <CardHeader>\n                        <h5 className=\"title\">Edit Creative Details</h5>\n                      </CardHeader>\n                      <CardBody>\n                        <Form>\n                          <Row>\n                            <Col className=\"pr-md-1\" md=\"2\">\n                              <FormGroup>\n                                <label>SQL ID (disabled)</label>\n                                <Input\n                                  defaultValue={creative.id}\n                                  disabled\n                                  type=\"text\"\n                                />\n                              </FormGroup>\n                            </Col>\n                            <Col className=\"px-md-1\" md=\"3\">\n                              <FormGroup>\n                                <label>Name</label>\n                                <Input\n                                  id=\"name\"\n                                  defaultValue={creative.name}\n                                  placeholder=\"Creative Name (Required)\"\n                                  type=\"text\"\n                                />\n                              </FormGroup>\n                            </Col>\n                            <Col className=\"pr-md-1\" md=\"2\">\n                              <FormGroup>\n                                <label>ECPM/Price</label>\n                                <Input\n                                  id=\"price\"\n                                  defaultValue={creative.price}\n                                  placeholder=\"Creative Price (Required)\"\n                                  type=\"text\"\n                                />\n                              </FormGroup>\n                            </Col>\n                            <Col className=\"px-md-1\" md=\"2\">\n                              <FormGroup>\n                                <label>Currency</label>\n                                <Input\n                                  id=\"currency\"\n                                  defaultValue={creative.cur}\n                                  placeholder=\"Creative Currency (Required)\"\n                                  type=\"text\"\n                                />\n                              </FormGroup>\n                            </Col>\n                            <Col className=\"px-md-1\" md=\"2\">\n                              <FormGroup>\n                                <label>Weight</label>\n                                <Input\n                                  id=\"currency\"\n                                  defaultValue={creative.weight}\n                                  placeholder=\"Creative weight (Required)\"\n                                  type=\"text\"\n                                />\n                              </FormGroup>\n                            </Col>\n                          </Row>\n                          <Row>\n                            <Col className=\"pr-md-1\" md=\"12\">\n                              <FormGroup>\n                                <label>Campaign</label>\n                                <Input\n                                    id=\"campaign\"\n                                    type=\"select\">\n                                    {getAttachedCampaign()}>\n                                </Input>\n                              </FormGroup>\n                            </Col>\n                          </Row>\n                          <Row>\n                            <Col className=\"pr-md-1\" md=\"4\">\n                              <FormGroup>\n                                <label>Start</label>\n                                <Col >\n                                <DatePicker\n                                    id=\"start\"\n                                    selected={startDate}\n                                    onChange={date => setStartDate(date)}\n                                    showTimeSelect\n                                    timeFormat=\"HH:mm\"\n                                    timeIntervals={15}\n                                    timeCaption=\"time\"\n                                    dateFormat=\"MMMM d, yyyy h:mm aa\"\n                                />\n                               </Col>\n                              </FormGroup>\n                            </Col>\n                            <Col className=\"pr-md-1\" md=\"4\">\n                              <FormGroup>\n                                <label>End</label>\n                                <Col>\n                                <DatePicker\n                                    id=\"end\"\n                                    selected={startDate}\n                                    onChange={date => setStartDate(date)}\n                                    showTimeSelect\n                                    timeFormat=\"HH:mm\"\n                                    timeIntervals={15}\n                                    timeCaption=\"time\"\n                                    dateFormat=\"MMMM d, yyyy h:mm aa\"\n                                />\n                                </Col>\n                                </FormGroup>\n                             </Col>\n                          </Row>\n                          <Row>\n                            <Col md=\"4\">\n                              <FormGroup>\n                                <label>Frequency Cap Variable</label>\n                                <Input id=\"freq_variable\"\n                                  defaultValue=\"request.device.ip\"\n                                  placeholder=\"RTB variable to frequency cap on\"\n                                  type=\"text\"\n                                />\n                              </FormGroup>\n                            </Col>\n                            <Col md=\"4\">\n                              <FormGroup>\n                                <label>Frequency Limit</label>\n                                <Input id='freq_limit\"'\n                                  defaultValue=\"0\"\n                                  placeholder=\"Max number\"\n                                  type=\"text\"\n                                />\n                              </FormGroup>\n                            </Col>\n                            <Col md=\"4\">\n                              <FormGroup>\n                                <label>Duration</label>\n                                <Input id=\"duration\"\n                                  defaultValue=\"0\"\n                                  placeholder=\"Duration in minutes\"\n                                  type=\"text\"\n                                />\n                              </FormGroup>\n                            </Col>\n                          </Row>                  \n                          <Row>\n                            <Col className=\"pr-md-1\" md=\"4\">\n                              <FormGroup>\n                              <label>Rules</label>\n                                <Input type=\"select\" name=\"select\" id=\"rules\" multiple>\n                                    {getSelectedRules()}\n                                </Input>     \n                              </FormGroup>\n                            </Col>\n                            <Col className=\"px-md-1\" md=\"2\">\n                              <FormGroup>\n                                <label>Total Budget</label>\n                                <Input placeholder=\"0\" type=\"number\" id=\"total_budget\"/>\n                              </FormGroup>\n                            </Col>\n                            <Col className=\"pl-md-1\" md=\"2\">\n                              <FormGroup>\n                                <label>Daily Budget</label>\n                                <Input placeholder=\"0\" type=\"number\" id=\"daily_budget\"/>\n                              </FormGroup>\n                            </Col>\n                            <Col className=\"pl-md-1\" md=\"2\">\n                              <FormGroup>\n                                <label>Hourly Budget</label>\n                                <Input placeholder=\"0\" type=\"number\" id=\"hourly_budget\" />\n                              </FormGroup>\n                            </Col>\n                          </Row>\n                        </Form>\n                      </CardBody>\n                      <CardFooter>\n                        <Button className=\"btn-fill\" c\n                          color=\"primary\" \n                          type=\"submit\"\n                          onClick={() => props.callback(creative)}\n                         >\n                          Save\n                        </Button>\n                        <Button className=\"btn-fill\" color=\"danger\" type=\"submit\" \n                            onClick={() => props.callback(null)}>\n                          Discard\n                        </Button>\n                      </CardFooter>\n                    </Card>\n                  </Col>\n     \n                </Row>\n              </div>\n            </>\n          );\n }\n export default CampaignEditor;","import React, { useState, useEffect } from \"react\";\n\n// reactstrap components\nimport {\n  Badge,\n  Button,\n  ButtonGroup,\n  ButtonToolbar,\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  CardText,\n\n  CardTitle,\n  Form,\n  FormGroup,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  Table,\n  Label,\n  Row,\n  Col\n} from \"reactstrap\";\nimport { useViewContext } from \"../../ViewContext\";\n\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n\nvar undef;\n\nconst RuleEditor = (props) => {\n\n  const [count, setCount] = useState(0);\n  const [rule, setRule] = useState(props.rule);\n  const [startDate, setStartDate] = useState(new Date());\n  const vx = useViewContext();\n\n  const nameChangedHandler = (event) => {\n      rule.name = event.target.value;\n      setRule(rule);\n  }\n  \n\nconst getTrueFalseOptions = (value)  =>{\n    if (value)\n        return(\n            <>\n            <option selected>true</option>\n            <option>false</option>\n            </>\n        );\n        return(\n            <>\n            <option>true</option>\n            <option selected>false</option>\n            </>\n        );\n}\n\nconst getOperator = () => {\n    return(\n        <>\n        <option>Domain</option>\n        <option>Equals</option>\n        <option>Exists</option>\n        <option>Greater Than</option>\n        <option>Greater Than Equals</option>\n        <option>Inrange</option>\n        <option>Less Than</option>\n        <option>Less Than Equals</option>\n        <option>Member</option>\n        <option>Not Domain</option>\n        <option>Not Equals</option>\n        <option>Not Member</option>\n        <option>Not Regex</option>\n        <option>Not Stringin</option>\n        <option>Stringin</option>\n        </>\n    );\n}\n\nconst getOperandType = () => {\n  return(\n    <>\n    <option>Integer</option>\n    <option>String</option>\n    <option>Double</option>\n    </>\n  );\n}\n\nconst getOperandOrdinal = () => {\n  return(\n    <>\n    <option>Scalar</option>\n    <option>List</option>\n    </>\n  );\n}\n\n  const redraw = () => {\n      setCount(count+1);\n  }\n\n        return (\n            <>\n              <div className=\"content\">\n                <Row>\n                  <Col>\n                    <Card>\n                      <CardHeader>\n                        <h5 className=\"title\">Edit Rule Details</h5>\n                      </CardHeader>\n                      <CardBody>\n                        <Form>\n                          <Row>\n                            <Col className=\"pr-md-1\" md=\"2\">\n                              <FormGroup>\n                                <label>SQL ID (disabled)</label>\n                                <Input\n                                  defaultValue={rule.id}\n                                  disabled\n                                  type=\"text\"\n                                />\n                              </FormGroup>\n                            </Col>\n                            <Col className=\"px-md-1\" md=\"3\">\n                              <FormGroup>\n                                <label>Name</label>\n                                <Input\n                                  defaultValue={rule.name}\n                                  placeholder=\"Target Name (Required)\"\n                                  type=\"text\"\n                                />\n                              </FormGroup>\n                            </Col>\n                            <Col className=\"px-md-1\" md=\"3\">\n                              <FormGroup>\n                              <label>Required</label>\n                              <Input type=\"select\" name=\"select\" id=\"required\">\n                                    {getTrueFalseOptions(!rule.notPresentOk)}\n                                </Input>        \n                              </FormGroup>\n                            </Col>\n                          </Row>\n                          <Row>\n                            <Col className=\"pr-md-1\" md=\"4\">\n                              <FormGroup>\n                                <label>RTB Specification</label>\n                                <Input type=\"input\" id=\"region\" >\n                                    {rule.specification}\n                                </Input>\n                              </FormGroup>\n                            </Col>\n                            <Col className=\"px-md-1\" md=\"4\">\n                              <FormGroup>\n                                <label>Operator</label>\n                                <Input type=\"select\" name=\"select\" id=\"operator\">\n                                    {getOperator()}\n                                </Input>     \n                              </FormGroup>\n                            </Col>\n                          </Row>\n        \n                          <Row>  \n                             <Col className=\"pl-md-1\" md=\"4\">\n                              <FormGroup>\n                                <label>Operand Value</label>\n                                <Input type=\"input\" name=\"text\" id=\"operand\" defaultValue={rule.operand}/>   \n                              </FormGroup>\n                            </Col> \n                            <Col className=\"pr-md-1\" md=\"4\">\n                              <FormGroup>\n                              <label>Use Set as Operand</label>\n                                <Input type=\"input\" name=\"text\" id=\"set-operand\"/>   \n                              </FormGroup>\n                            </Col>\n                            </Row>\n                            <Row>\n                            <Col className=\"px-md-1\" md=\"4\">\n                              <FormGroup>\n                              <label>Operand Type</label>\n                                <Input type=\"select\" name=\"text\" id=\"operand-type\"> \n                                  {getOperandType()}\n                                </Input>\n                              </FormGroup>\n                              </Col>\n                              <Col className=\"px-md-1\" md=\"4\">\n                              <FormGroup>\n                              <label>Operand Ordinal</label>\n                                <Input type=\"select\" name=\"text\" id=\"ordinal\">   \n                                  {getOperandOrdinal()}\n                                </Input>\n                              </FormGroup>\n                            </Col>\n                          </Row>\n                    \n                        </Form>\n                      </CardBody>\n                      <CardFooter>\n                        <Button className=\"btn-fill\" color=\"primary\" \n                            type=\"submit\" onClick={() => props.callback(rule)}>\n                          Save\n                        </Button>\n                        <Button className=\"btn-fill\" color=\"danger\" type=\"submit\" \n                            onClick={() => props.callback(null)}>\n                          Discard\n                        </Button>\n                      </CardFooter>\n                    </Card>\n                  </Col>\n                </Row>\n              </div>\n            </>\n          );\n }\n export default RuleEditor;","/*!\n\n=========================================================\n* Black Dashboard React v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport Dashboard from \"views/Dashboard.jsx\";\nimport Icons from \"views/Icons.jsx\";\nimport LeafMap from \"views/LeafMap.jsx\";\nimport Notifications from \"views/Notifications.jsx\";\nimport TableList from \"views/TableList.jsx\";\nimport Typography from \"views/Typography.jsx\";\nimport UserProfile from \"views/UserProfile.jsx\"\nimport Simulator from \"views/Simulator.jsx\"\nimport ConsoleLog from \"views/ConsoleLog.jsx\"\nimport Campaigns from \"views/Campaigns.jsx\"\nimport Targets from \"views/Targets.jsx\"\nimport Creatives from \"views/Creatives.jsx\"\nimport Rules from \"views/Rules.jsx\"\n\n\nvar routes = [\n  {\n    path: \"/dashboard\",\n    name: \"Dashboard\",\n    icon: \"tim-icons icon-chart-pie-36\",\n    component: Dashboard,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/campaigns\",\n    name: \"Campaigns\",\n    icon: \"tim-icons icon-palette\",\n    component: Campaigns,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/targets\",\n    name: \"Targets\",\n    icon: \"tim-icons icon-check-2\",\n    component: Targets,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/creatives\",\n    name: \"Creatives\",\n    icon: \"tim-icons icon-video-66\",\n    component: Creatives,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/rules\",\n    name: \"Rules\",\n    icon: \"tim-icons icon-bank\",\n    component: Rules,\n    layout: \"/admin\"\n  }\n];\n\nexport default routes;\n","import React, { useState, useEffect } from \"react\";\n\n// reactstrap components\nimport {\n  Badge,\n  Button,\n  ButtonGroup,\n  ButtonToolbar,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Table,\n  Row,\n  Col\n} from \"reactstrap\";\nimport { useViewContext } from \"../ViewContext\";\nimport LoginModal from '../LoginModal'\nimport CampaignEditor from './editors/CampaignEditor.jsx'\n\nvar undef;\n\n const Campaigns = (props) => {\n\n  const [count, setCount] = useState(0);\n  const [campaign, setCampaign] = useState(null);\n  const vx = useViewContext();\n\n  const redraw = () => {\n      setCount(count+1);\n  }\n\n  const setInstances = () => {\n\n  };\n\n  const refresh = async() => {\n      await vx.getDbCampaigns();\n  }\n\n  const makeNew = async() => {\n    if (campaign !== null)\n        return;\n\n    var camp = await vx.getNewCampaign(\"My New Campaign\");\n    setCampaign(camp);\n  }\n\n  const editCampaign = async (id) => {\n    for(var i=0;i<vx.campaigns.length;i++) {\n      var x = vx.campaigns[i];\n      if (x.id === id) {\n        setCampaign(x);\n        return;\n      }\n    }\n  }\n\n  const deleteCampaign = async (id) => {\n    for(var i=0;i<vx.campaigns.length;i++) {\n      var x = vx.campaigns[i];\n      if (x.id === id) {\n        vx.deleteCampaign(id);\n        vx.getDbCampaigns();\n        redraw();\n        return;\n      }\n    }\n  }\n\n  const getCampaignsView = () => {\n\n    console.log(\"GetCampaigsView, rows = \" + vx.campaigns.length);\n\n   return(\n      vx.campaigns.map((row, index) => (\n        <tr key={'campaignsview-' + row}>\n          <td>{index}</td>\n          <td key={'campaignsview-name-' + index} className=\"text-left\">{row.name}</td>\n          <td key={'campaignsview-id-' + index} className=\"text-right\">{row.id}</td>\n          <td key={'campaignsview-status-' + index} className=\"text-right\">{row.status}</td>\n          <td key={'campaignsview-running-'+ index} className=\"text-right\">{\"\"+row.running}</td>\n          <td key={'campaignsview-edit-'+ index} className=\"text-right\">\n            <Button color=\"success\" size=\"sm\" onClick={()=>editCampaign(row.id)}>Edit</Button></td>\n            <td key={'campaignsview-edit-'+ index} className=\"text-right\">\n          <Button color=\"danger\" size=\"sm\" onClick={()=>deleteCampaign(row.id)}>Delete</Button></td>\n        </tr>))\n    ); \n  }\n\n  const update = (e) => {\n      setCampaign(null);\n      if (e !== null) {\n        alert(\"NEW CAMPAIGN: \" + JSON.stringify(e,null,2));\n        vx.addNewCampaign(JSON.stringify(e));\n        vx.getDbCampaigns();\n        setCampaign(null);\n      }\n      redraw();\n  }\n\n  return (\n    <div className=\"content\">\n    { !vx.isLoggedIn && <LoginModal callback={setInstances} />}\n        <Row>\n            <Col xs=\"12\">\n            { campaign == null && <>\n            <Button size=\"sm\" className=\"btn-fill\" color=\"success\" onClick={refresh}>Refresh</Button>\n            <Button size=\"sm\" className=\"btn-fill\" color=\"danger\" onClick={makeNew}>New</Button>\n                <Card className=\"card-chart\">\n                    <CardHeader>\n                        <Row>\n                            <CardTitle tag=\"h2\">Campaigns in DB</CardTitle>\n                        </Row>\n                    </CardHeader>\n                    <CardBody>\n                      <Table key={\"bidders-table-\"+count} size=\"sm\">\n                        <thead>\n                          <tr>\n                            <th>#</th>\n                            <th className=\"text-center\">Name</th>\n                            <th className=\"text-right\">SQL-ID</th>\n                            <th className=\"text-right\">Runnable</th>\n                            <th className=\"text-right\">Is Running</th>\n                            <th className=\"text-right\"></th>\n                            <th className=\"text-right\"></th>\n                          </tr>\n                      </thead>\n                      <tbody>\n                        { getCampaignsView() }\n                      </tbody>\n                    </Table>\n                  </CardBody>\n                </Card>\n                </>\n                }\n                { campaign !== null &&\n                    <CampaignEditor key={\"ce-\"+count} campaign={campaign} callback={update} />\n                }\n            </Col>\n        </Row>\n    </div>\n  );\n }\n\n export default Campaigns;","import React, { useState, useEffect } from \"react\";\n\n// reactstrap components\nimport {\n  Badge,\n  Button,\n  ButtonGroup,\n  ButtonToolbar,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Table,\n  Row,\n  Col\n} from \"reactstrap\";\nimport { useViewContext } from \"../ViewContext\";\nimport LoginModal from '../LoginModal'\nimport TargetEditor from './editors/TargetEditor.jsx'\n\nvar undef;\n\n const Targets = (props) => {\n\n  const vx = useViewContext();\n  const [target, setTarget] = useState(null);\n  const [count, setCount] = useState(0);\n\n  const redraw = () => {\n      setCount(count+1);\n  }\n\n  const makeNew = async() => {\n    if (target !== null)\n    return;\n\n    var targ = await vx.getNewTarget(\"My New Target\");\n    setTarget(targ);\n  }\n\n  const update = (x) => {\n    if (x !== null) {\n        // update database;\n    }\n    setTarget(null)\n    redraw();\n  }\n\n  const setInstances = () => {\n\n  };\n\n  const getTargetsView = () => {\n\n    return(\n        <div>\n        </div>\n    );\n  }\n\n  return (\n    <div className=\"content\">\n    { !vx.isLoggedIn && <LoginModal callback={setInstances} />}\n        <Row>\n            <Col xs=\"12\">\n            { target == null && <>\n            <Button size=\"sm\" className=\"btn-fill\" color=\"success\" onClick={redraw}>Refresh</Button>\n            <Button size=\"sm\" className=\"btn-fill\" color=\"danger\" onClick={makeNew}>New</Button>\n                <Card className=\"card-chart\">\n                    <CardHeader>\n                        <Row>\n                            <CardTitle tag=\"h2\">Targets in DB</CardTitle>\n                        </Row>\n                    </CardHeader>\n                    <CardBody>\n                      <Table key={\"bidders-table-\"+count} size=\"sm\">\n                        <thead>\n                          <tr>\n                            <th>#</th>\n                            <th className=\"text-center\">Name</th>\n                            <th className=\"text-right\">SQL-ID</th>\n                            <th className=\"text-right\">Target</th>\n                          </tr>\n                      </thead>\n                      <tbody>\n                        { getTargetsView() }\n                      </tbody>\n                    </Table>\n                  </CardBody>\n                </Card>\n                </>\n                }\n                { target !== null &&\n                    <TargetEditor key={\"targ-\"+count} target={target} callback={update} />\n                }\n            </Col>\n        </Row>\n    </div>\n  );\n }\n\n export default Targets;","import React, { useState, useEffect } from \"react\";\n\n// reactstrap components\nimport {\n  Badge,\n  Button,\n  ButtonGroup,\n  ButtonToolbar,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Table,\n  Row,\n  Col\n} from \"reactstrap\";\nimport { useViewContext } from \"../ViewContext\";\nimport LoginModal from '../LoginModal'\nimport CreativeEditor from './editors/CreativeEditor.jsx'\n\nvar undef;\n\n const Creatives = (props) => {\n\n  const vx = useViewContext();\n  const [creative, setCreative] = useState(null);\n  const [count, setCount] = useState(0);\n\n  const redraw = () => {\n      setCount(count+1);\n  }\n\n  const makeNewBanner = async() => {\n    if (creative !== null)\n    return;\n\n    var banner = await vx.getNewCreative(\"My New Banner\");\n    banner.isBanner = true;\n    setCreative(banner);\n  }\n\n  const makeNewVideo = async() => {\n    if (creative !== null)\n    return;\n\n    var video = await vx.getNewVideo(\"My New Video\");\n    setCreative(video);\n  }\n\n\n  const makeNewNative = async() => {\n    if (creative !== null)\n    return;\n\n    var native = await vx.getNewNative(\"My New Native\");\n    setCreative(native);\n  }\n\n\n  const makeNewAudio = async() => {\n    if (creative !== null)\n    return;\n\n    var audio = await vx.getNewAudio(\"My New Audio\");\n    setCreative(audio);\n  }\n\n  const update = (x) => {\n    if (x !== null) {\n        // update database;\n    }\n    setCreative(null)\n    redraw();\n  }\n\n  const getBannersView = () => {\n      return(\n        <>\n        </>\n      );\n  }\n\n  const getVideosView = () => {\n    return(\n      <>\n      </>\n    );\n}\n\n\n  const setInstances = () => {\n\n  };\n\n  const getTargetsView = () => {\n\n    return(\n        <div>\n        </div>\n    );\n  }\n\n  return (\n    <div className=\"content\">\n    { !vx.isLoggedIn && <LoginModal callback={setInstances} />}\n    { creative === null && <>\n        <Row>\n            <Col xs=\"12\">\n            <Button size=\"sm\" className=\"btn-fill\" color=\"success\" onClick={redraw}>Refresh</Button>\n            <Button size=\"sm\" className=\"btn-fill\" color=\"danger\" onClick={makeNewBanner}>New</Button>\n                <Card className=\"card-chart\">\n                    <CardHeader>\n                        <Row>\n                            <CardTitle tag=\"h2\">Banners</CardTitle>\n                        </Row>\n                    </CardHeader>\n                    <CardBody>\n                      <Table key={\"banners-table-\"+count} size=\"sm\">\n                        <thead>\n                          <tr>\n                            <th>#</th>\n                            <th className=\"text-center\">Name</th>\n                            <th className=\"text-right\">SQL-ID</th>\n                            <th className=\"text-right\">Name</th>\n                          </tr>\n                      </thead>\n                      <tbody>\n                        { getBannersView() }\n                      </tbody>\n                    </Table>\n                  </CardBody>           \n                </Card>\n            </Col>\n        </Row>\n\n        <Row>\n            <Col xs=\"12\">\n            <Button size=\"sm\" className=\"btn-fill\" color=\"success\" onClick={redraw}>Refresh</Button>\n            <Button size=\"sm\" className=\"btn-fill\" color=\"danger\" onClick={makeNewVideo}>New</Button>\n                <Card className=\"card-chart\">\n                    <CardHeader>\n                        <Row>\n                            <CardTitle tag=\"h2\">Videos</CardTitle>\n                        </Row>\n                    </CardHeader>\n                    <CardBody>\n                      <Table key={\"banners-table-\"+count} size=\"sm\">\n                        <thead>\n                          <tr>\n                            <th>#</th>\n                            <th className=\"text-center\">Name</th>\n                            <th className=\"text-right\">SQL-ID</th>\n                            <th className=\"text-right\">Name</th>\n                          </tr>\n                      </thead>\n                      <tbody>\n                        { getVideosView() }\n                      </tbody>\n                    </Table>\n                  </CardBody>           \n                </Card>\n            </Col>\n        </Row>\n\n        </>\n        }\n        { creative !== null &&\n            <CreativeEditor key={\"creative-\"+count} creative={creative} callback={update} />\n        }\n    </div>\n  );\n }\n\n export default Creatives;","import React, { useState, useEffect } from \"react\";\n\n// reactstrap components\nimport {\n  Badge,\n  Button,\n  ButtonGroup,\n  ButtonToolbar,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Table,\n  Row,\n  Col\n} from \"reactstrap\";\nimport { useViewContext } from \"../ViewContext\";\nimport LoginModal from '../LoginModal'\nimport RuleEditor from './editors/RuleEditor.jsx'\n\nvar undef;\n\nconst Rules = (props) => {\n\n    const [count, setCount] = useState(0);\n    const [rule, setRule] = useState(null);\n    const vx = useViewContext();\n  \n    const redraw = () => {\n        setCount(count+1);\n    }\n\n  const setInstances = () => {\n\n  };\n\n  const makeNew = async() => {\n    if (rule !== null)\n        return;\n\n    var r = await vx.getNewRule(\"My New Rule\");\n    setRule(r);\n  }\n\n  const getRulesView = () => {\n\n    return(\n        <div>\n        </div>\n    );\n  }\n\n  const update = (e) => {\n      setRule(null);\n      if (e !== null) {\n        // update database\n        setRule(null);\n      }\n      redraw();\n  }\n\n  return (\n    <div className=\"content\">\n    { !vx.isLoggedIn && <LoginModal callback={setInstances} />}\n        <Row>\n            <Col xs=\"12\">\n            { rule == null && <>\n            <Button size=\"sm\" className=\"btn-fill\" color=\"success\" onClick={redraw}>Refresh</Button>\n            <Button size=\"sm\" className=\"btn-fill\" color=\"danger\" onClick={makeNew}>New</Button>\n                <Card className=\"card-chart\">\n                    <CardHeader>\n                        <Row>\n                            <CardTitle tag=\"h2\">Rules in DB</CardTitle>\n                        </Row>\n                    </CardHeader>\n                    <CardBody>\n                      <Table key={\"bidders-table-\"+count} size=\"sm\">\n                        <thead>\n                          <tr>\n                            <th>#</th>\n                            <th className=\"text-center\">Name</th>\n                            <th className=\"text-right\">SQL-ID</th>\n                            <th className=\"text-right\">Rule</th>\n                          </tr>\n                      </thead>\n                      <tbody>\n                        { getRulesView() }\n                      </tbody>\n                    </Table>\n                  </CardBody>\n                </Card>\n                </>\n                }\n                { rule !== null &&\n                    <RuleEditor key={\"rule-\"+count} rule={rule} callback={update} />\n                }\n            </Col>\n        </Row>\n    </div>\n  );\n }\n\n export default Rules;","/*!\n\n=========================================================\n* Black Dashboard React v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { useState, useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\n// core components\nimport AdminNavbar from \"components/Navbars/AdminNavbar.jsx\";\nimport Footer from \"components/Footer/Footer.jsx\";\nimport Sidebar from \"components/Sidebar/Sidebar.jsx\";\nimport FixedPlugin from \"components/FixedPlugin/FixedPlugin.jsx\";\n\nimport routes from \"routes.js\";\n\nimport logo from \"assets/img/react-logo.png\";\n\nvar ps;\n\nconst Admin = (props) => {\n  const [backgroundColor, setBackgroundColor] = useState('blue');\n  const [sidebarOpened, setSidebarOpened] = useState( document.documentElement.className.indexOf(\"nav-open\") !== -1);\n\n  // this function opens and closes the sidebar on small devices\n  const toggleSidebar = () => {\n    document.documentElement.classList.toggle(\"nav-open\");\n    setSidebarOpened(!sidebarOpened);\n  };\n\n  const getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n\n  const handleBgClick = color => {\n    setBackgroundColor(color);\n  };\n\n  const getBrandText = path => {\n    for (let i = 0; i < routes.length; i++) {\n      if (\n        props.location.pathname.indexOf(\n          routes[i].layout + routes[i].path\n        ) !== -1\n      ) {\n        return routes[i].name;\n      }\n    }\n    return \"Brand\";\n  };\n\n    return (\n      <>\n        <div className=\"wrapper\">\n          <Sidebar\n            {...props}\n            routes={routes}\n            bgColor={backgroundColor}\n            logo={{\n              outterLink: \"https://www.creative-tim.com/\",\n              text: \"RTB4FREE\",\n              imgSrc: logo\n            }}\n            toggleSidebar={toggleSidebar}\n          />\n          <div\n            className=\"main-panel\"\n\n            data={backgroundColor}\n          >\n            <AdminNavbar\n              {...props}\n              brandText={getBrandText(props.location.pathname)}\n              toggleSidebar={toggleSidebar}\n              sidebarOpened={sidebarOpened}\n            />\n            <Switch>{getRoutes(routes)}</Switch>\n            {// we don't want the Footer to be rendered on map page\n              props.location.pathname.indexOf(\"maps\") !== -1 ? null : (\n              <Footer fluid />\n            )}\n          </div>\n        </div>\n        <FixedPlugin\n          bgColor={backgroundColor}\n          handleBgClick={handleBgClick}\n        />\n      </>\n    );\n}\n\nexport default Admin;\n","/*!\n\n=========================================================\n* Black Dashboard React v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { Router, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport AdminLayout from \"layouts/Admin/Admin.jsx\";\n\nimport \"assets/scss/black-dashboard-react.scss\";\nimport \"assets/demo/demo.css\";\nimport \"assets/css/nucleo-icons.css\";\n\nimport LoginModal from './LoginModal'\nimport { useViewContext } from './ViewContext'\n\nconst hist = createBrowserHistory();\n\n\nReactDOM.render(\n  <Router history={hist}>\n    <useViewContext.Provider>\n    <Switch>\n      <Route path=\"/admin\" render={props => <AdminLayout {...props} />} />\n      <Redirect from=\"/\" to=\"/admin/dashboard\" />\n    </Switch>\n    </useViewContext.Provider>\n  </Router>,\n  document.getElementById(\"root\")\n);\n","import React from \"react\";\n\nexport const SampleBanner = {\n  \"id\": \"35c22289-06e2-48e9-a0cd-94aeb79fab43\",\n\t\"Xid\": \"123\",\n\t\"at\": 2,\n\t\"imp\": [{\n\t\t\"id\": \"1\",\n\t\t\"instl\": 0,\n\t\t\"banner\": {\n\t\t\t\"h\": 50,\n\t\t\t\"w\": 320,\n\t\t\t\"mimes\": [\"image/jpg\", \"text/javascript\" ],\n\t\t\t\"pos\": 0\n\t\t},\n\t\t\"ext\": {\n\t\t\t\"nex_screen\": 0\n\t\t}\n\t}],\n\t\"site\": {\n\t\t\"id\": \"99201\",\n\t\t\"name\": \"rtb4free\",\n\t\t\"domain\": \"junk1.com\",\n\t\t\"cat\": [\n\t\t\t\"IAB1\", \"IAB2\", \"IAB3\"\n\t\t],\n\t\t\"keywords\": \"radiation\",\n\t\t\"page\": \"http://www.nexage.com\",\n\t\t\"ref\": \"http://www.iab.net\",\n\t\t\"search\": \"radiation\",\n\t\t\"publisher\": {\n\t\t\t\"id\": \"98401\",\n\t\t\t\"name\": \"RTB Bidder Integration Test Publisher\"\n\t\t},\n\t\t\"ext\": {\n\t\t\t\"nex_coppa\": 0\n\t\t}\n\t},\n\t\"device\": {\n\t\t\"didsha1\": \"132079238ec783b0b89dff308e1f9bdd08576273\",\n\t\t\"dpidsha1\": \"f22711a823044bb9ce7ace097955de0286eb0182\",\n\t\t\"ip\": \"166.137.138.18\",\n\t\t\"carrier\": \"ATT\",\n\t\t\"ua\": \"Mozilla/5.0 (iPhone; U; CPU iPhone OS 4_2_1 like Mac OS X; el-gr) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8C148 Safari/6533.18.5\",\n\t\t\"make\": \"Apple\",\n\t\t\"model\": \"iPhone\",\n\t\t\"osv\": \"3.1.2\",\n\t\t\"connectiontype\": 3,\n\t\t\"devicetype\": 1,\n\t\t\"geo\": {\n\t\t\t\"lat\": 42.378,\n\t\t\t\"lon\": -71.227,\n\t\t\t\"country\": \"USA\"\n\t\t}\n\t},\n\t\"user\": {\n\t\t\"id\": \"ASDFJKL\",\n\t\t\"yob\": 1961,\n\t\t\"gender\": \"F\",\n\t\t\"keywords\": \"sports\",\n\t\t\"geo\": {\n\t\t\t\"country\": \"USA\",\n\t\t\t\"city\": \"Waltham\",\n\t\t\t\"zip\": \"02451\",\n\t\t\t\"region\": \"MA\",\n\t\t\t\"type\": 3\n\t\t},\n\t\t\"ext\": {\n\t\t\t\"nex_eth\": \"4\",\n\t\t\t\"nex_marital\": \"M\",\n\t\t\t\"nex_kids\": \"N\",\n\t\t\t\"nex_hhi\": 75000,\n\t\t\t\"nex_dma\": \"Boston\"\n\t\t}\n\t},\n\t\"ext\": {\n\t\t\"coppa\": 0,\n\t\t\"udi\": {\n\t\t\t\"googleadid\": \"5e2efab6-7721-4cfe-b542-97084d5aa62f\",\n\t\t\t\"googlednt\": 0,\n\t\t\t\"atuid\": \"a90377ab-190b-1036-f424-ac10fdb8ffef\"\n\t\t},\n\t\t\"operaminibrowser\": 0,\n\t\t\"carriername\": \"Verizon Wireless\"\n\t}\n};\n\nexport const SampleVideo = {\n  \"Xid\": \"35c22289-06e2-48e9-a0cd-94aeb79fab43\",\n  \"id\": \"123\",\n  \"at\": 2,\n  \"imp\": [\n      {\n          \"id\": \"35c22289-06e2-48e9-a0cd-94aeb79fab43-1\",\n          \"instl\": 0,\n          \"bidfloor\": 0.01,\n          \"video\": {\n              \"h\": 200,\n              \"w\": 400,\n              \"linearity\": 1,\n              \"minduration\": 5,\n              \"maxduration\": 30,\n              \"protocols\": [\n                2, 3\n              ],\n       \"mimes\": [\n         \"video/x-flv\",\n         \"video/mp4\",\n         \"application/x-shockwave-flash\",\n         \"application/javascript\"\n       ],\n              \"pos\": 0\n          },\n          \"ext\": {\n              \"nex_screen\": 0\n          }\n      }\n  ],\n  \"site\": {\n      \"id\": \"99201\",\n      \"name\": \"Bidder Test Mobile WEB\",\n      \"domain\": \"junk1.com\",\n      \"cat\": [\n          \"IAB1\"\n      ],\n      \"keywords\": \"radiation\",\n      \"page\": \"http://www.nexage.com\",\n      \"ref\": \"http://www.iab.net\",\n      \"search\": \"radiation\",\n      \"publisher\": {\n          \"id\": \"98401\",\n          \"name\": \"RTB Bidder Integration Test Publisher\"\n      },\n      \"ext\": {\n          \"nex_coppa\": 0\n      }\n  },\n  \"device\": {\n      \"didsha1\": \"132079238ec783b0b89dff308e1f9bdd08576273\",\n      \"dpidsha1\": \"f22711a823044bb9ce7ace097955de0286eb0182\",\n      \"ip\": \"166.137.138.18\",\n      \"carrier\": \"ATT\",\n      \"ua\": \"Mozilla/5.0 (iPhone; U; CPU iPhone OS 4_2_1 like Mac OS X; el-gr) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8C148 Safari/6533.18.5\",\n      \"make\": \"Apple\",\n      \"model\": \"iPhone\",\n      \"osv\": \"3.1.2\",\n      \"connectiontype\": 3,\n      \"devicetype\": 1,\n      \"geo\": {\n          \"lat\": 42.378,\n          \"lon\": -71.227,\n          \"country\": \"USA\"\n      }\n  },\n  \"user\": {\n      \"id\": \"ASDFJKL\",\n      \"yob\": 1961,\n      \"gender\": \"F\",\n      \"keywords\": \"sports\",\n      \"geo\": {\n          \"country\": \"USA\",\n          \"city\": \"Waltham\",\n          \"zip\": \"02451\",\n          \"region\": \"MA\",\n          \"type\": 3\n      },\n      \"ext\": {\n          \"nex_eth\": \"4\",\n          \"nex_marital\": \"M\",\n          \"nex_kids\": \"N\",\n          \"nex_hhi\": 75000,\n          \"nex_dma\": \"Boston\"\n      }\n  }\n};\n\nexport const SampleAudio = {\n    \"id\": \"d7de216e-10de-472d-b70f-4497c2e0cd83\",\n    \"at\": 2,\n    \"imp\": [{\n        \"id\": \"d7de216e-10de-472d-b70f-4497c2e0cd83-1\",\n        \"instl\": 1,\n        \"audio\": {\n            \"mimes\": [\"audio/mp4\"],\n            \"minduration\": 0,\n            \"protocols\": [5, 2]\n        },\n        \"companionad\": [\n            {\n                \"banner\": {\n                    \"h\": 50,\n                    \"w\": 320,\n                    \"mimes\": [\"image/jpg\", \"text/javascript\" ],\n                    \"pos\": 0\n                }\n            }\n        ],\n        \"bidfloor\": 1.0,\n        \"ext\": {\n            \"nex_screen\": 0\n        }\n    }],\n    \"app\": {\n        \"id\": \"16745\",\n        \"name\": \"Auido App\",\n        \"publisher\": {\n            \"id\": \"1744\",\n            \"name\": \"Audio App Pub\",\n            \"ext\": {\n                \"nex_else\": 0\n            }\n        },\n        \"domain\": \"nexage.com\",\n        \"cat\": [\"IAB1\", \"IAB2\", \"IAB3\"],\n        \"bundle\": \"com.audioapp.cma\",\n        \"storeurl\": \"https://play.google.com/store/apps/details?id=com.audoapp.cma&hl=en\"\n    },\n    \"device\": {\n        \"ua\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.162 Safari/537.36\",\n        \"model\": \"Non-Mobile\",\n        \"devicetype\": 4\n    },\n    \"user\": {\n        \"id\": \"DAf4044202-9a11-11e6-999-99999999\"\n    },\n    \"regs\": {\n        \"coppa\": 0,\n        \"ext\": {\n            \"gdpr\": 1\n        }\n\n    }\n};\n\nexport const SampleNative = {\n  \"Xid\": \"35c22289-06e2-48e9-a0cd-94aeb79fab43\",\n  \"id\": \"123\",\n  \"at\": 2,\n  \"imp\": [\n      {\n          \"id\": \"39c22289-06e2-48e9-a0cd-94aeb79fab43-1=3\",\n          \"instl\": 0,\n          \"native\": {\n              \"layout\":2,\n              \"assets\": [\n                  {\n                      \"id\": 1,\n                      \"required\": 1,\n                      \"title\": {\n                          \"len\": 30\n                      }\n                  },\n                  {\n                      \"id\": 2,\n                      \"required\": 0,\n                      \"data\": {\n                          \"type\": 3,\n                          \"len\": 5\n                      }\n                  },\n                  {\n                      \"id\": 3,\n                      \"required\": 1,\n                      \"img\": {\n                          \"type\": 1,\n                          \"w\": 64,\n                          \"h\": 64,\n                          \"mimes\": [\n                              \"image/png\"\n                          ]\n                      }\n                  },\n                  {\n                      \"id\": 4,\n                      \"required\": 0,\n                      \"data\": {\n                          \"type\": 2,\n                          \"len\": 10\n                      }\n                  }\n              ]\n          },\n          \"ext\": {\n              \"nex_screen\": 0\n          }\n      }\n  ],\n  \"site\": {\n      \"id\": \"99201\",\n      \"name\": \"Bidder Test Mobile WEB\",\n      \"domain\": \"junk1.com\",\n      \"cat\": [\n          \"IAB1\"\n      ],\n      \"keywords\": \"radiation\",\n      \"page\": \"http://www.nexage.com\",\n      \"ref\": \"http://www.iab.net\",\n      \"search\": \"radiation\",\n      \"publisher\": {\n          \"id\": \"98401\",\n          \"name\": \"RTB Bidder Integration Test Publisher\"\n      },\n      \"ext\": {\n          \"nex_coppa\": 0\n      }\n  },\n  \"device\": {\n      \"didsha1\": \"132079238ec783b0b89dff308e1f9bdd08576273\",\n      \"dpidsha1\": \"f22711a823044bb9ce7ace097955de0286eb0182\",\n      \"ip\": \"166.137.138.18\",\n      \"carrier\": \"ATT\",\n      \"ua\": \"Mozilla/5.0 (iPhone; U; CPU iPhone OS 4_2_1 like Mac OS X; el-gr) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8C148 Safari/6533.18.5\",\n      \"make\": \"Apple\",\n      \"model\": \"iPhone\",\n      \"osv\": \"3.1.2\",\n      \"connectiontype\": 3,\n      \"devicetype\": 1,\n      \"geo\": {\n          \"lat\": 42.378,\n          \"lon\": -71.227,\n          \"country\": \"USA\"\n      }\n  },\n  \"user\": {\n      \"id\": \"ASDFJKL\",\n      \"yob\": 1961,\n      \"gender\": \"F\",\n      \"keywords\": \"sports\",\n      \"geo\": {\n          \"country\": \"USA\",\n          \"city\": \"Waltham\",\n          \"zip\": \"02451\",\n          \"region\": \"MA\",\n          \"type\": 3\n      },\n      \"ext\": {\n          \"nex_eth\": \"4\",\n          \"nex_marital\": \"M\",\n          \"nex_kids\": \"N\",\n          \"nex_hhi\": 75000,\n          \"nex_dma\": \"Boston\"\n      }\n  }\n};\n\nexport const Logo = () =>\n  <div style={{ margin: '1rem auto', display: 'flex', flexWrap: 'wrap', alignItems: 'center', justifyContent: 'center'}}>\n    For more information, visit {'RTB4FREE.COM'}\n  <br />\n    <a href=\"http://rtb4free.com\" target=\"_blank\">\n      <img\n        src=\"http://rtb4free.com/images/alien.png\"\n        alt=\"\"\n        style={{ width: `50px`, margin: \".5em auto .3em\" }}\n      />\n    </a>\n  </div>;\n\nexport const Tips = () =>\n  <div style={{ textAlign: \"center\" }}>\n    <em>Tip: Hold shift when sorting to multi-sort!</em>\n  </div>;\n"],"sourceRoot":""}